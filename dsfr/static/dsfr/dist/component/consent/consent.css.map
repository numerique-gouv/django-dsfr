{"version":3,"sources":["<no source>","%3Cinput%20css%20JKB2Ei%3E","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/consent/main.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/consent/style/module/_placeholder.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/display/tool/_display.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/spacing/tool/_space.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/typography/tool/_styles.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/color/mixin/_element.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/consent/style/module/_banner.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/spacing/tool/_position.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/spacing/tool/_size.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/elevation/mixin/_z-index.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/elevation/mixin/_shadow.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/consent/style/module/_services.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/selector/tool/_nest.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/link/style/tool/_size.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/link/style/tool/_icon.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/selector/tool/_pseudo.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/icon/tool/_default.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/display/tool/_mask-image.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/link/style/tool/_build.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/spacing/tool/_z-index.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/action/tool/_hover.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/action/tool/_link.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/consent/style/module/_manager.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/typography/tool/_font-weight.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/consent/style/_scheme.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/media-query/mixin/_respond-from.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/shame/media-query/mixin/_order.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/legacy/mixin/_legacy.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/consent/style/_legacy.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/icon/tool/_legacy.scss"],"names":[],"mappings":"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","file":"consent.css","sourcesContent":[null,"@charset \"UTF-8\";\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  CONSENT MAIN\n\\* ˍˍˍˍˍˍˍˍˍ */\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n.fr-consent-placeholder {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 5rem 2rem;\n  text-align: center;\n  --text-spacing: 0 0 1.5rem;\n  --title-spacing: 0 0 0.5rem;\n}\n\n.fr-consent-banner {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  max-height: calc(100% - 8rem);\n  padding: 1rem;\n  overflow: auto;\n  --text-spacing: 0 0 1rem;\n  --title-spacing: 0 0 1rem;\n}\n@media (min-width: 48em) {\n  .fr-consent-banner {\n    padding: 2rem;\n    bottom: 2.5rem;\n    left: 2.5rem;\n    max-width: 40rem;\n    max-height: calc(100% - 5rem);\n  }\n}\n.fr-consent-banner__title {\n  font-weight: 700;\n  font-size: 1.125rem;\n  line-height: 1.5rem;\n  margin-bottom: 1rem;\n}\n@media (min-width: 48em) {\n  .fr-consent-banner__title {\n    font-size: 1.25rem;\n    line-height: 1.75rem;\n  }\n}\n.fr-consent-banner__buttons {\n  margin-top: 1.5rem;\n  margin-bottom: -1rem;\n}\n@media (min-width: 48em) {\n  .fr-consent-banner__buttons {\n    margin-top: 2rem;\n  }\n}\n\n/**\n* Consent service correspond à un bloc de finalité (titre, radios, description)\n**/\n.fr-consent-service {\n  position: relative;\n  /**\n  * Nom du service\n  **/\n  /**\n  * Description du service\n  **/\n  /**\n  * Bloc dépliable, contient des sous services\n  **/\n  /**\n  * Conteneur des radio-group\n  **/\n  /**\n  * Groupe de radios avec séparateur\n  **/\n}\n.fr-consent-service > .fr-fieldset {\n  padding: 0 0 1.25rem;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  position: initial;\n}\n@media (min-width: 48em) {\n  .fr-consent-service > .fr-fieldset {\n    padding: 0 0 1.25rem;\n  }\n}\n@media (min-width: 48em) {\n  .fr-consent-service > .fr-fieldset {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n}\n.fr-consent-service:last-child > .fr-fieldset {\n  padding: 2rem 0 1rem;\n}\n@media (min-width: 48em) {\n  .fr-consent-service:last-child > .fr-fieldset {\n    padding: 1.25rem 0 1rem;\n  }\n}\n.fr-consent-service:last-child > .fr-fieldset .fr-consent-service > .fr-fieldset:last-child {\n  margin-bottom: 0;\n}\n.fr-consent-service__title {\n  font-weight: 700;\n  font-size: 1.125rem;\n  line-height: 1.5rem;\n  padding: 2rem 0 0.75rem;\n  margin: 0;\n}\n@media (min-width: 48em) {\n  .fr-consent-service__title {\n    font-size: 1.25rem;\n    line-height: 1.75rem;\n  }\n}\n@media (min-width: 48em) {\n  .fr-consent-service__title {\n    width: 50%;\n  }\n}\n.fr-consent-service__desc {\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n  --text-spacing: 0.75rem 0 0.75rem 0;\n}\n@media (min-width: 48em) {\n  .fr-consent-service__desc {\n    --text-spacing: 0.25rem 1.5rem 0.75rem 0;\n    width: 60%;\n  }\n}\n.fr-consent-service__collapse {\n  margin-top: -0.25rem;\n  margin-bottom: 0.75rem;\n  width: 100%;\n}\n.fr-consent-service__collapse .fr-consent-service__collapse-btn {\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n  padding: 0 0;\n  overflow: initial;\n  max-width: 100%;\n  max-height: none;\n}\n.fr-consent-service__collapse .fr-consent-service__collapse-btn::after {\n  content: \"\";\n  --icon-size: 1rem;\n  margin-right: -0.125rem;\n  margin-left: 0.25rem;\n}\n.fr-consent-service__collapse .fr-consent-service__collapse-btn::before {\n  content: none;\n}\n.fr-consent-service__collapse .fr-consent-service__collapse-btn::after {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-consent-service__collapse .fr-consent-service__collapse-btn::after {\n  -webkit-mask-image: url(\"../../icons/system/arrow-down-s-line.svg\");\n  mask-image: url(\"../../icons/system/arrow-down-s-line.svg\");\n}\n.fr-consent-service__collapse .fr-consent-service__collapse-btn::after {\n  content: \"\";\n}\n.fr-consent-service__collapse .fr-consent-service__collapse-btn::before {\n  content: none;\n}\n.fr-consent-service__radios {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n@media (min-width: 48em) {\n  .fr-consent-service__radios {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-end;\n    margin-bottom: 0;\n    position: absolute;\n    top: 1.25rem;\n    right: 0;\n    width: 50%;\n  }\n}\n.fr-consent-service .fr-radio-group {\n  position: relative;\n}\n.fr-consent-service .fr-radio-group:not(:last-child) input[type=radio] + label {\n  margin-right: 3rem;\n}\n.fr-consent-service .fr-radio-group:not(:first-child)::before {\n  content: \"\";\n  display: block;\n  width: 1px;\n  height: 1.5rem;\n  position: absolute;\n  left: calc(-1.5rem - 1px);\n  top: 0.75rem;\n}\n.fr-consent-service .fr-consent-service__collapse-btn {\n  --text-spacing: 0;\n  --title-spacing: 0;\n  z-index: 1;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  width: -moz-fit-content;\n  width: fit-content;\n  background: transparent;\n  padding: 0;\n  color: inherit;\n  --hover-tint: var(--idle);\n  --active-tint: var(--idle);\n  background-image: var(--underline-img), var(--underline-img);\n  background-position: var(--underline-x) 100%, var(--underline-x) calc(100% - 0.0625em);\n  background-repeat: no-repeat, no-repeat;\n  transition: background-size 0s;\n  background-size: var(--underline-hover-width) 0.125em, var(--underline-idle-width) 0.0625em;\n}\n.fr-consent-service .fr-consent-service__collapse-btn::before, .fr-consent-service .fr-consent-service__collapse-btn::after {\n  display: block;\n}\n.fr-consent-service .fr-consent-service__collapse-btn::after {\n  margin-right: -1.25rem;\n  transition: transform 0.3s;\n}\n.fr-consent-service .fr-consent-service__collapse-btn[aria-expanded=true]::after {\n  transform: rotate(-180deg);\n}\n\n/**\n* fr-consent-services contient les sous services\n**/\n.fr-consent-services {\n  margin-top: 0.5rem;\n  margin-bottom: -0.5rem;\n  width: 100%;\n}\n.fr-consent-services .fr-consent-service > .fr-fieldset, .fr-consent-services .fr-consent-service:last-child > .fr-fieldset {\n  padding: 0;\n}\n.fr-consent-services .fr-consent-service:last-child > .fr-fieldset {\n  margin-bottom: 1.25rem;\n}\n@media (min-width: 48em) {\n  .fr-consent-services .fr-consent-service + .fr-consent-service {\n    margin-top: -0.25rem;\n  }\n}\n.fr-consent-services .fr-consent-service__title {\n  padding-top: 0.75rem;\n}\n.fr-consent-services .fr-consent-service__radios {\n  top: 0;\n}\n.fr-consent-services .fr-consent-service__desc {\n  --text-spacing: 0.25rem 0 0.75rem 0;\n}\n@media (min-width: 48em) {\n  .fr-consent-services .fr-consent-service__desc {\n    --text-spacing: 0.25rem 0 0.25rem 0;\n  }\n}\n\n.fr-consent-manager__header {\n  padding-top: 0;\n}\n.fr-consent-manager__header .fr-consent-service__title {\n  width: 100%;\n  padding: 0 0 0.75rem 0;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  font-weight: 400;\n}\n@media (min-width: 62em) {\n  .fr-consent-manager__header .fr-consent-service__title {\n    width: 44%;\n  }\n}\n@media (min-width: 78em) {\n  .fr-consent-manager__header .fr-consent-service__title {\n    width: 50%;\n  }\n}\n.fr-consent-manager__header .fr-consent-service__radios {\n  width: 100%;\n  justify-content: flex-start;\n  top: 0;\n  position: initial;\n}\n@media (min-width: 62em) {\n  .fr-consent-manager__header .fr-consent-service__radios {\n    width: 56%;\n    position: absolute;\n    justify-content: flex-end;\n  }\n}\n@media (min-width: 78em) {\n  .fr-consent-manager__header .fr-consent-service__radios {\n    width: 50%;\n  }\n}\n.fr-consent-manager__buttons {\n  margin-bottom: -3rem;\n  margin-top: 1rem;\n}\n\n.fr-consent-placeholder {\n  background-color: var(--background-contrast-grey);\n  --idle: transparent;\n  --hover: var(--background-contrast-grey-hover);\n  --active: var(--background-contrast-grey-active);\n}\n\n.fr-consent-banner {\n  z-index: calc(var(--ground) + 1500);\n  background-color: var(--background-alt-overlap-grey);\n  --idle: transparent;\n  --hover: var(--background-alt-overlap-grey-hover);\n  --active: var(--background-alt-overlap-grey-active);\n  filter: drop-shadow(var(--overlap-shadow));\n  box-shadow: inset 0 0 0 1px var(--border-default-grey);\n}\n\n.fr-consent-manager__header,\n.fr-consent-service {\n  box-shadow: inset 0 -1px 0 0 var(--border-default-grey);\n  color: var(--text-default-grey);\n}\n.fr-consent-manager__header .fr-radio-group + .fr-radio-group::before,\n.fr-consent-service .fr-radio-group + .fr-radio-group::before {\n  box-shadow: inset 0 0 0 1px var(--border-default-grey);\n}\n\n.fr-consent-service:last-of-type,\n.fr-consent-service .fr-consent-service {\n  box-shadow: none;\n}\n\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-consent-service__collapse .fr-consent-service__collapse-btn {\n    text-decoration: underline;\n  }\n  .fr-consent-service__collapse .fr-consent-service__collapse-btn::before, .fr-consent-service__collapse .fr-consent-service__collapse-btn::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-consent-service__collapse .fr-consent-service__collapse-btn::before, .fr-consent-service__collapse .fr-consent-service__collapse-btn::after {\n    background-image: url(\"../../icons/system/arrow-down-s-line.svg\");\n  }\n  .fr-consent-service__collapse .fr-consent-service__collapse-btn::before, .fr-consent-service__collapse .fr-consent-service__collapse-btn::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-consent-service__collapse .fr-consent-service__collapse-btn[aria-expanded=true]::before, .fr-consent-service__collapse .fr-consent-service__collapse-btn[aria-expanded=true]::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-consent-service__collapse .fr-consent-service__collapse-btn[aria-expanded=true]::before, .fr-consent-service__collapse .fr-consent-service__collapse-btn[aria-expanded=true]::after {\n    background-image: url(\"../../icons/system/arrow-up-s-line.svg\");\n  }\n  .fr-consent-service__collapse .fr-consent-service__collapse-btn[aria-expanded=true]::before, .fr-consent-service__collapse .fr-consent-service__collapse-btn[aria-expanded=true]::after {\n    width: 1rem;\n    height: 1rem;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-consent-placeholder {\n    background-color: #eee;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-consent-banner {\n    z-index: 1500;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-consent-banner {\n    background-color: #f6f6f6;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-consent-banner {\n    box-shadow: inset 0 0 0 1px #ddd;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-consent-manager__header,\n.fr-consent-service {\n    box-shadow: inset 0 -1px 0 0 #ddd;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-consent-manager__header,\n.fr-consent-service {\n    color: #3a3a3a;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-consent-manager__header .fr-radio-group + .fr-radio-group::before,\n.fr-consent-service .fr-radio-group + .fr-radio-group::before {\n    box-shadow: inset 0 0 0 1px #ddd;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-consent-service:last-of-type,\n.fr-consent-service .fr-consent-service {\n    box-shadow: none;\n  }\n}","/* ¯¯¯¯¯¯¯¯¯ *\\\n  CONSENT MAIN\n\\* ˍˍˍˍˍˍˍˍˍ */\n\n@use 'module/path';\n@use 'module/shame/media-query';\n\n@include path.to-dist(2);\n@include media-query.order;\n\n@import 'index';\n@import 'style/module';\n@import 'style/scheme';\n\n@include _consent-scheme;\n","////\n/// Placeholder Module\n/// @group consent\n////\n\n#{ns(consent-placeholder)} {\n  @include display-flex(column,center,center);\n  @include padding(20v 8v);\n  text-align: center;\n  @include set-text-margin(0 0 6v);\n  @include set-title-margin(0 0 2v);\n}\n","////\n/// Core Tool : Display display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n@use 'module/spacing';\n\n/// Set space property\n///\n/// @param {String} $property ['margin'] - propriété à appliquer à l'espacement `['margin', 'padding']`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `['x', 'y', 'top', 'right', 'bottom', 'left']`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing('margin', 6v, 'bottom');\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: spacing.space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@use 'module/spacing';\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} spacing.space($font-size) #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} spacing.space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'module/legacy';\n@use 'module/media-query';\n@use 'module/spacing';\n@use 'module/specificity';\n@use 'module/string';\n@use 'module/utilities';\n@use '../variable/constant';\n@use '../function/box-shadow' as bs;\n@use '../function/colors';\n@use '../function/result';\n@use '../function/token';\n\n$COLOR: constant.$value;\n\n@mixin _element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $standalone: map.get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy {\n    $legacy-target: ie11;\n  }\n\n  $tokens: token.normalise($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: colors.from-list($tokens, $type, $options);\n  $result: result.get($colors, $value);\n  $result: specificity.important($result, $important);\n\n  @include legacy.is($legacy-target) {\n    #{$prop}: #{string.unstringify($result)};\n  }\n\n  @if ($hover == true or ($hover == inherit and $legacy == false)) and ($context == background and list.length($tokens) == 1) {\n\n    $token: nth($tokens, 1);\n    @if $legacy or $standalone {\n      @include _apply-pseudos($token, false, true, $legacy-target, $prop, $value, $important);\n    }\n    @else {\n      @if $prop == background-color {\n        --idle: transparent; // #{$result};\n        @include _apply-pseudos($token, true, false, null, $prop, $value, $important);\n      }\n      @else {\n        @include _apply-pseudos($token, true, true, null, $prop, $value, $important);\n      }\n    }\n  }\n}\n\n@mixin _apply-pseudos($token, $decision: true, $pseudo: false, $target: null, $prop: background-color, $value: constant.$value, $important: false) {\n  @include legacy.is($target) {\n    @include _apply-pseudo($token, hover, $decision, $pseudo, $prop, $value, $important);\n    @include _apply-pseudo($token, active, $decision, $pseudo, $prop, $value, $important);\n  }\n}\n\n@mixin _apply-pseudo($token, $type, $decision: true, $pseudo: false, $prop: background-color, $value: constant.$value, $important: false) {\n  $nest: null;\n  $p: --#{$type};\n  @if $pseudo {\n    $nest: '&:#{$type}';\n    $p: $prop;\n  }\n\n  $t: hex;\n  $options: (#{$type}: true);\n  @if $decision {\n    $t: decision;\n    $options: (var: true, #{$type}: true);\n  }\n\n  $color: colors.from($token, $t, $options);\n  $result: result.get($color, $value);\n  $result: specificity.important($result, $important);\n\n  @include utilities.nest($nest) {\n    #{$p}: #{string.unstringify($result)};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background($tokens, $options:()) {\n  @if not map.has-key($options, hover) {\n    $options: map.merge($options, (hover: inherit));\n  }\n  @include _element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin transparent-background($options) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $tokens: token.normalise(default grey, background);\n  $value: specificity.important(transparent, $important);\n\n  @if $legacy {\n    @include legacy.is(ie11) {\n      background-color: transparent;\n\n      @if $hover {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &:active {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n  }\n  @else {\n    background-color: #{$value};\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background-image($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: token.length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: string.unquote('$color##{$i}');\n      $transformed: list.append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include _element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text($tokens, $options) {\n  @include _element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text-fill($tokens, $options) {\n  @include _element(-webkit-text-fill-color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin fill($tokens, $options) {\n  @include _element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin border($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map.has-key($options, side) {\n    $prop:border-#{map.get($options, side)};\n  }\n  @include _element($prop, border, $tokens, $options, $value);\n}\n\n@mixin no-border($options: ()) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        border: 0;\n      }\n    }\n    @else {\n      border: 0;\n    }\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin outline($tokens, $options, $value:1px solid $COLOR) {\n  @include _element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin box-shadow($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: token.length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if bs.has($v) {\n      $transformed: append($transformed, bs.get($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include _element(box-shadow, border, $tokens, $options, spacing.space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin no-box-shadow($options) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        box-shadow: none;\n      }\n    }\n    @else {\n      box-shadow: none;\n    }\n  }\n}\n","////\n/// Placeholder Module\n/// @group consent\n////\n\n@use 'module/spacing';\n\n#{ns(consent-banner)} {\n  @include fixed(null, null, 0, 0, 100%);\n  max-height: calc(100% - #{space(32v)});\n  @include padding(4v);\n  overflow: auto;\n  @include set-text-margin(0 0 4v);\n  @include set-title-margin(0 0 4v);\n\n  @include respond-from(md) {\n    @include padding(8v);\n    bottom: spacing.space(10v);\n    left: spacing.space(10v);\n    max-width: spacing.space(160v);\n    max-height: calc(100% - #{spacing.space(20v)});\n  }\n\n  &__title {\n    @include title-style(h6);\n    @include margin-bottom(4v);\n  }\n\n  &__buttons {\n    @include margin-top(6v);\n    @include margin-top(8v, md);\n    @include margin-bottom(-4v);\n  }\n}\n","////\n/// Core Tool : Spacing position\n/// @group core\n////\n\n@use 'module/spacing';\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin top($top) {\n  top: spacing.space($top);\n}\n\n@mixin right($top) {\n  right: spacing.space($top);\n}\n\n@mixin bottom($top) {\n  bottom: spacing.space($top);\n}\n\n@mixin left($top) {\n  left: spacing.space($top);\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{space($max-height)};\n    }\n  }\n}\n","@use 'sass:map';\n@use 'module/elevation/variable/z-indexes';\n@use 'module/legacy';\n\n@mixin z-index($level, $legacy: false) {\n  @if map.has-key(z-indexes.$values, $level) {\n    $z-index: map.get(z-indexes.$values, $level);\n    @if $legacy {\n      @include legacy.is(ie11) {\n        z-index: #{$z-index};\n      }\n    }\n    @else {\n      z-index: calc(var(--ground) + #{$z-index});\n    }\n  }\n}\n","@use 'sass:map';\n@use 'module/elevation/variable/shadows';\n\n@mixin shadow($layer) {\n  @if map.has-key(shadows.$values, $layer) {\n    filter: drop-shadow(var(--#{$layer}-shadow));\n  }\n}\n","////\n/// services Module\n/// @group consent\n////\n\n@use 'module/spacing';\n\n/**\n* Consent service correspond à un bloc de finalité (titre, radios, description)\n**/\n#{ns(consent-service)} {\n  @include relative;\n\n  > #{ns(fieldset)} {\n    @include padding(0 0 5v);\n    @include padding(0 0 5v, md);\n    @include display-flex(column);\n    @include size(100%);\n    position: initial;\n\n    @include respond-from(md) {\n      @include display-flex(row,null,null,wrap);\n    }\n  }\n\n  &:last-child {\n    > #{ns(fieldset)} {\n      @include padding(8v 0 4v);\n      @include padding(5v 0 4v, md);\n\n      #{ns(consent-service)} > #{ns(fieldset)}:last-child {\n        @include margin-bottom(0);\n      }\n    }\n  }\n\n  /**\n  * Nom du service\n  **/\n  &__title {\n    @include title-style(h6);\n    @include padding(8v 0 3v);\n    @include margin(0);\n\n    @include respond-from(md) {\n      @include size(50%);\n    }\n  }\n\n  /**\n  * Description du service\n  **/\n  &__desc {\n    @include text-style(sm);\n    @include set-text-margin(3v 0 3v 0);\n\n    @include respond-from(md) {\n      @include set-text-margin(1v 6v 3v 0);\n      @include size(60%);\n    }\n  }\n\n  /**\n  * Bloc dépliable, contient des sous services\n  **/\n  &__collapse {\n    @include margin-top(-1v);\n    @include margin-bottom(3v);\n    @include size(100%);\n    @include nest-consent-btn;\n  }\n\n  /**\n  * Conteneur des radio-group\n  **/\n  &__radios {\n    // @include margin-bottom(3v);\n    @include display-flex(row, null, null, wrap);\n\n    @include respond-from(md) {\n      @include display-flex(row,center,flex-end);\n      @include margin-bottom(0);\n      @include absolute(5v, 0);\n      @include size(50%);\n    }\n  }\n\n  /**\n  * Groupe de radios avec séparateur\n  **/\n  #{ns-group(radio)} {\n    position: relative;\n\n    &:not(:last-child) input[type=\"radio\"] + label {\n      @include margin-right(12v);\n    }\n\n    &:not(:first-child) {\n      @include before('','block') {\n        @include size(1px, 6v);\n        @include absolute;\n        left: calc(#{space(-6v)} - 1px);\n        top: spacing.space(3v);\n      }\n    }\n  }\n\n  @include build-consent-btn {\n    background: transparent;\n    @include padding(0);\n    color: inherit;\n    @include disable-tint;\n    @include link-underline;\n    @include after {\n      @include margin-right(-5v);\n      transition: transform 0.3s;\n    }\n\n    &[aria-expanded=\"true\"] {\n      @include after {\n        transform: rotate(-180deg);\n      }\n    }\n  }\n}\n\n/**\n* fr-consent-services contient les sous services\n**/\n#{ns(consent-services)} {\n  @include margin-top(2v);\n  @include margin-bottom(-2v);\n  @include size(100%);\n\n  #{ns(consent-service)} {\n    &,\n    &:last-child {\n      > #{ns(fieldset)} {\n        @include padding(0);\n      }\n    }\n\n    &:last-child {\n      > #{ns(fieldset)} {\n        @include margin-bottom(5v);\n      }\n    }\n\n    & + #{ns(consent-service)} {\n      @include margin-top(-1v, md);\n    }\n\n    &__title {\n      @include padding-top(3v);\n    }\n\n    &__radios {\n      top: 0;\n    }\n\n    &__desc {\n      @include set-text-margin(1v 0 3v 0);\n      @include respond-from(md) {\n        @include set-text-margin(1v 0 1v 0);\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Selector nest\n/// @group core\n////\n\n@mixin nest($selector: null) {\n  @if $selector {\n    #{$selector} {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Link Tool : sizes\n/// @group link\n////\n\n@use \"sass:math\";\n@use 'module/spacing';\n\n@mixin _build-link-size($size-settings, $border-radius: false) {\n  $font-size: map_get($size-settings, font-size);\n  $style: get-text-style($font-size);\n  $line-height: spacing.space(map_get($style, line-height));\n  font-size: spacing.space($font-size);\n  line-height: $line-height;\n\n  $min-height: spacing.space(map_get($size-settings, min-height));\n  @if $min-height > 0 {\n    min-height: $min-height;\n  }\n\n  $max-icon-height: icon-size(md);\n\n  @if map_has_key($size-settings, icon-only) {\n    $max-icon-height: icon-size(map_get($size-settings, icon-only));\n  }\n  @else if map_has_key($size-settings, icon) {\n    $max-icon-height: icon-size(map_get($size-settings, icon));\n  }\n\n  $space-y: math.max($line-height, $max-icon-height);\n  $padding-x: spacing.space(map_get($size-settings, padding-x));\n  $padding-y: math.max(($min-height - $space-y) * 0.5, 0);\n\n  padding: #{$padding-y} #{$padding-x};\n\n  @if $border-radius {\n    border-radius: #{$min-height * 0.5};\n  }\n}\n\n@function _link-icon-margin($size) {\n  @return math.div(icon-size($size), 8);\n}\n\n@mixin _link-align-on-content($size, $place, $size-settings) {\n  $padding-x: spacing.space(map_get($size-settings, padding-x));\n  $icon-margin: _link-icon-margin(map_get($size-settings, icon));\n\n  @if $place == null {\n    margin-left: -($padding-x);\n    margin-right: -($padding-x);\n  }\n  @else if $place == left {\n    margin-left: -($padding-x - $icon-margin);\n    margin-right: -($padding-x);\n  }\n  @else if $place == right {\n    margin-left: -($padding-x);\n    margin-right: -($padding-x - $icon-margin);\n  }\n  @else if $place == only {\n    $icon-size: icon-size(map_get($size-settings, icon-only));\n    $min-height: spacing.space(map_get($size-settings, min-height));\n    $padding-x: ($min-height - $icon-size) * 0.5;\n\n    margin-left: -($padding-x);\n    margin-right: -($padding-x);\n  }\n}\n","////\n/// Link Tool : icons\n/// @group link\n////\n\n@use 'module/spacing';\n\n@mixin _build-link-icon($size-settings, $place, $size:md, $override: true) {\n\n  $icon-size: icon-size(map_get($size-settings, icon));\n\n  @if $place == only {\n    $icon-size: icon-size(map_get($size-settings, icon-only));\n  }\n\n  $icon-margin: _link-icon-margin(map_get($size-settings, icon));\n  $icon-margin-x: spacing.space(map_get($size-settings, icon-margin-x));\n\n  @if $place == left {\n    overflow: initial;\n    max-width: 100%;\n    max-height: none;\n    @include before {\n      --icon-size: #{$icon-size};\n      margin-left: -($icon-margin);\n      margin-right: $icon-margin-x;\n    }\n  }\n  @else if $place == right {\n    overflow: initial;\n    max-width: 100%;\n    max-height: none;\n    @include icon-content(false, $override) {\n      --icon-size: #{$icon-size};\n      margin-right: -($icon-margin);\n      margin-left: $icon-margin-x;\n    }\n  }\n  @else if $place == only {\n    $min-height: spacing.space(map_get($size-settings, min-height));\n    $padding-x: ($min-height - $icon-size) * 0.5;\n\n    overflow: hidden;\n    white-space: nowrap;\n    max-width: $min-height;\n    max-height: $min-height;\n    padding-left: $padding-x;\n    padding-right: $padding-x;\n\n    @include before {\n      --icon-size: #{$icon-size};\n      margin-left: 0;\n      margin-right: $padding-x;\n    }\n  }\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tool : Icon default\n/// @group core\n////\n\n@use 'module/path';\n@use 'module/spacing';\n@use 'module/specificity';\n\n/// Return icon size from map\n/// @param {String} $size ['md'] - Icon size from `$icon-size-map` (Default to 'md' = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return spacing.space(map-get($icon-size-map, $size));\n}\n\n@function get-icon-url($icon, $important: false) {\n  $config: map-get($icons-config, $icon);\n  $url: url('#{path.dist()}#{map-get($config, path)}');\n  @return specificity.important($url, $important);\n}\n\n@function get-icon-pseudo($restrain) {\n  @if $restrain == before or $restrain == after {\n    @return $restrain;\n  }\n  @return before after;\n}\n\n@mixin _icon-pseudo ($restrain: null) {\n  @include _pseudo(get-icon-pseudo($restrain)) {\n    @content;\n  }\n}\n\n@mixin icon-size ($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    --icon-size: #{icon-size($size)};\n    @content;\n  }\n}\n\n@mixin icon-image ($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n\n  @include _icon-pseudo($restrain) {\n    @include mask-image($url);\n  }\n}\n\n@mixin icon-style($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    flex: 0 0 auto;\n    display: inline-block;\n    vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n    background-color: currentColor;\n    @include size(var(--icon-size), var(--icon-size));\n    @include mask-image-size(100% 100%);\n    @content;\n  }\n}\n\n@mixin icon-content($is-before: true, $override: false) {\n  $pseudos: before after;\n  @if not $is-before {\n    $pseudos: after before;\n  }\n  @include _pseudo(nth($pseudos, 1), '') {\n    @content;\n  }\n  @if $override {\n    @include _pseudo(nth($pseudos, 2), none);\n  }\n}\n\n@mixin icon($icon: null, $size: md, $restrain: null, $styling: true, $is-before: $restrain != after, $override: false) {\n  @if $styling {\n    @include icon-style($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size($size, $restrain);\n  }\n\n  @if $is-before != null {\n    @include icon-content($is-before, $override) {\n      @content;\n    }\n  }\n}\n\n@function filter-icons($category, $config: $icons-config) {\n  $filtered: ();\n  @each $icon, $setting in $config {\n    @if map-get($setting, category) == $category {\n      $filtered: map-merge($filtered, (#{$icon}: $setting));\n    }\n  }\n  @return $filtered;\n}\n\n@mixin generate-icons($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image($icon);\n    }\n  }\n}\n","////\n/// Core Tool : mask-image\n/// @group core\n////\n\n@mixin mask-image($value) {\n  -webkit-mask-image: $value;\n  mask-image: $value;\n}\n\n@mixin mask-image-size($value) {\n  -webkit-mask-size: $value;\n  mask-size: $value;\n}\n\n@mixin mask-image-position($value) {\n  -webkit-mask-position: $value;\n  mask-position: $value;\n}\n","////\n/// Link Tool : build\n/// @group link\n////\n\n@mixin _link-class($base, $size: md, $place: null, $align-on-content: false) {\n  $selector: '';\n  $base: '#{$base}';\n\n  @if $size != md {\n    $selector: '#{$base}--#{$size}';\n  }\n\n  @if $align-on-content {\n    $selector: '#{$selector}#{$base}--align-on-content';\n  }\n\n  @if $place == only {\n    @if $selector == '' {\n      $selector: '#{$base}';\n    }\n    $selector: '#{$selector}:not([class*=\"#{str-slice($base, 2)}--icon-\"])';\n  }\n  @else if $place == left or $place == right {\n    $selector: '#{$selector}#{$base}--icon-#{$place}';\n  }\n\n  @if $selector == '' {\n    $selector: $base;\n  }\n\n  #{$selector} {\n    @if $place != null {\n      @include has-icon {\n        @content;\n      }\n    }\n    @else {\n      @content;\n    }\n  }\n}\n\n@mixin _build-link-base {\n  @include set-text-margin(0);\n  @include set-title-margin(0);\n  @include z-index(over);\n}\n\n@mixin _link-display($display) {\n  @if $display == flex {\n    @include display-flex(row, center, null, null, true);\n    width: -moz-fit-content;\n    width: fit-content;\n    @include _pseudo(before after) {\n      display: block;\n    }\n  }\n  @else {\n    display: inline;\n  }\n}\n\n@mixin _build-link($settings) {\n  $places: map_get($settings, places);\n  $sizes: _link-sort-sizes(map_get($settings, sizes));\n  $border-radius: map-get($settings, border-radius);\n  $align-on-content: map-get($settings, align-on-content);\n  $base: ns(map-get($settings, selector));\n  $underline: map-get($settings, underline);\n\n  #{$base} {\n    @include _build-link-base;\n    @include _link-display(map-get($settings, display));\n\n    @if $underline != true {\n      @include disable-underline;\n      @include tint-enabled(true, null);\n    }\n    @content;\n  }\n\n  @if map_get($settings, no-modifier) != true {\n    @each $size, $size-settings in $sizes {\n      @include _link-class($base, $size) {\n        @include _build-link-size($size-settings, $border-radius);\n\n        @if map_get($settings, blank) {\n          @include target-blank(true) {\n            @include _build-link-icon($size-settings, right, $size, false);\n          }\n        }\n      }\n\n      @if $align-on-content {\n        @include _link-class($base, $size, null, true) {\n          @include _link-align-on-content($size, null, $size-settings);\n        }\n      }\n\n      @if $places != null {\n        @each $place in $places {\n          @include _link-class($base, $size, $place) {\n            @include _build-link-icon($size-settings, $place, $size);\n          }\n\n          @if $align-on-content {\n            @include _link-class($base, $size, $place, true) {\n              @include _link-align-on-content($size, $place, $size-settings);\n            }\n          }\n        }\n\n        @if index($places, only) == null {\n          @include _link-class($base, $size, only) {\n            @include before(none);\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin build-link() {\n  @include _build-link($links-settings) {\n    @content;\n  }\n}\n","////\n/// Core Tool : Spacing z-index\n/// @group core\n////\n\n/// Fonction de gestion des z-index\n/// @access public\n/// @param {String} $index-name - nom du calque de z-index\n@function z-index($index-name) {\n  @return map-get($z-indexes, $index-name);\n}\n\n/// Mixin de gestion des z-index\n/// @access public\n/// @param {String} $index-name - nom du calque de z-index\n@mixin z-index($index-name) {\n  z-index: z-index($index-name);\n}\n","////\n/// Core Tool : Action Hover\n/// @group core\n////\n\n@mixin hover-media-query () {\n  @media (hover: hover) and (pointer: fine) {\n    @content;\n  }\n}\n\n@mixin hover-type-selector($elements, $type: all, $check-disabled: false) {\n  $selectors: ();\n\n  @each $element, $setting in $elements {\n    $hover: map-get($setting, hover);\n    $selector: map-get($setting, selector);\n    @if $hover {\n      @if $type == map-get($hover, type) or $type == all {\n        $nested: $selector;\n        @if $check-disabled {\n          $nested: nest($selector, map-get($hover, selector));\n        }\n        $associated: $nested;\n        @if & != null and '#{&}' != ':root' {\n          $associated: selector-associate('#{&}', $nested);\n        }\n        $selectors: append($selectors, $associated, 'comma');\n      }\n    }\n  }\n\n  @at-root #{$selectors} {\n    @content;\n  }\n}\n\n@mixin hover-tint () {\n  &:hover {\n    background-color: var(--hover-tint);\n  }\n\n  &:active {\n    background-color: var(--active-tint);\n  }\n}\n\n@mixin enable-tint () {\n  @include tint-enabled(true, true);\n}\n\n@mixin disable-tint() {\n  @include tint-enabled(false, false);\n}\n\n@mixin tint-enabled ($hover: null, $active: null) {\n  @if $hover {\n    --hover-tint: var(--hover);\n  }\n  @else if $hover == false {\n    --hover-tint: var(--idle);\n  }\n\n  @if $active {\n    --active-tint: var(--active);\n  }\n  @else if $active == false {\n    --active-tint: var(--idle);\n  }\n}\n\n@mixin hover-brighten ($element, $img) {\n  @at-root #{$element} {\n    &:hover {\n      #{$img} {\n        --brightness: calc(100% + var(--brighten) * #{$hover-brighten});\n      }\n    }\n\n    &:active {\n      #{$img} {\n        --brightness: calc(100% + var(--brighten) * #{$hover-brighten * 2});\n      }\n    }\n  }\n}\n\n@mixin hover-brighten-filter () {\n  filter: brightness(var(--brightness));\n}\n","////\n/// Core Tool : Reset\n/// @group core\n////\n\n$underline-thickness: 0.0625em;\n\n@mixin a-reset ($minimal: false) {\n  text-decoration: none;\n  @if not $minimal {\n    color: inherit;\n  }\n}\n\n@mixin init-underline() {\n  --underline-max-width: 100%;\n  --underline-hover-width: 0;\n  --underline-idle-width: var(--underline-max-width);\n  --underline-x: calc(var(--underline-max-width) * 0);\n}\n\n@mixin enable-underline() {\n  --underline-img: linear-gradient(0deg, currentColor, currentColor);\n}\n\n@mixin enable-underline-legacy() {\n  [href] {\n    text-decoration: underline;\n  }\n}\n\n@mixin disable-underline() {\n  --underline-img: none;\n}\n\n@mixin disable-underline-legacy() {\n  [href] {\n    text-decoration: none;\n  }\n}\n\n@mixin link-underline() {\n  background-image: var(--underline-img), var(--underline-img);\n  background-position: var(--underline-x) 100%, var(--underline-x) calc(100% - #{$underline-thickness});\n  background-repeat: no-repeat, no-repeat;\n  transition: background-size 0s;\n  background-size: var(--underline-hover-width) #{$underline-thickness * 2 }, var(--underline-idle-width) #{$underline-thickness };\n}\n\n@mixin link-underline-hover-only() {\n  --underline-idle-width: 0;\n}\n\n@mixin hover-underline () {\n  &:hover,\n  &:active {\n    --underline-hover-width: var(--underline-max-width);\n  }\n}\n\n@mixin external-link() {\n  @include icon-style(after);\n  @include icon-size(sm, after);\n  @include icon-image(external-link-line, after);\n  @include after(var(--external-link-content)) {\n    @include margin-left(1v);\n  }\n}\n\n@mixin enable-external() {\n  --external-link-content: '';\n}\n\n@mixin disable-external() {\n  --external-link-content: none;\n}\n\n@mixin target-blank ($unify: false) {\n  @if $unify and & {\n    &[target=\"_blank\"] {\n      @content;\n    }\n  }\n  @else {\n    [target=\"_blank\"] {\n      @content;\n    }\n  }\n}\n","////\n/// Manager Module\n/// @group consent\n////\n\n#{ns(consent-manager)} {\n  &__header {\n    @include padding-top(0);\n\n    #{ns(consent-service)}__title {\n      width: 100%;\n      @include padding(0 0 3v 0);\n      @include text-style(md);\n      @include font-weight(regular);\n\n      @include respond-from(lg) {\n        width: 44%;\n      }\n\n      @include respond-from(xl) {\n        width: 50%;\n      }\n    }\n\n    #{ns(consent-service)}__radios {\n      width: 100%;\n      justify-content: flex-start;\n      top: 0;\n      position: initial;\n\n      @include respond-from(lg) {\n        width: 56%;\n        position: absolute;\n        justify-content: flex-end;\n      }\n\n      @include respond-from(xl) {\n        width: 50%;\n      }\n    }\n  }\n\n  &__buttons {\n    @include margin-bottom(-12v);\n    @include margin-top(4v);\n  }\n}\n","////\n/// Core Tool : Typography font-weight\n/// @group core\n////\n\n/// Return font-weight value from font-weight map.\n///\n/// @param {String} $scale ['regular'] - Type scale value from `$weight-scale` (Default to 'regular' = 400)\n///\n/// @example scss - Set font-weight to bold (700)\n///   .foo {\n///     font-weight: font-weight('bold');\n///   }\n\n@function font-weight($scale: regular) {\n  @return map-get($font-weight-scale, $scale);\n}\n\n@mixin font-weight($scale) {\n  font-weight: font-weight($scale);\n}\n\n@mixin build-utillity-font-weight() {\n  $fontWeightValues: map-get($font-weight-vars, values);\n  @if $fontWeightValues == 'all' {\n    $fontWeightValues: map-keys($font-weight-names);\n  }\n  @each $weight in $fontWeightValues {\n    $name: map-get($font-weight-names, $weight);\n    #{ns('text--' + $name)} {\n      font-weight: #{$weight} !important;\n    }\n  }\n}\n","////\n/// Consent Scheme\n/// @group consent\n////\n\n@use 'module/color';\n@use 'module/elevation';\n\n@mixin _consent-scheme($legacy: false) {\n  #{ns(consent-placeholder)} {\n    @include color.background(contrast grey, (legacy:$legacy));\n  }\n\n  #{ns(consent-banner)} {\n    // @include color.background(contrast grey, (legacy:$legacy));\n    @include elevation.elevate(overlap-above, (legacy:$legacy, usage: alt));\n    @include color.box-shadow(default grey, (legacy:$legacy));\n  }\n\n  #{ns(consent-manager__header)},\n  #{ns(consent-service)} {\n    @include color.box-shadow(default grey, (legacy:$legacy), bottom-1-in);\n    @include color.text(default grey, (legacy:$legacy));\n\n    #{ns-group(radio)} {\n      + #{ns-group(radio)} {\n        @include before {\n          @include color.box-shadow(default grey, (legacy:$legacy));\n        }\n      }\n    }\n  }\n\n  #{ns(consent-service)} {\n    &:last-of-type,\n    #{ns(consent-service)} {\n      @include color.no-box-shadow((legacy: $legacy));\n    }\n  }\n}\n","@use '../variable/breakpoints';\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get(breakpoints.$values, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","@use 'module/media-query/variable/breakpoints';\n@use 'module/media-query';\n\n@mixin order () {\n  @each $bp, $limits in breakpoints.$values {\n    @if $bp != xs {\n      @include media-query.respond-from($bp) {\n        /*! media #{$bp} */\n      }\n    }\n  }\n}\n","/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is-not($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Consent legacy\n/// @group consent\n////\n\n@use 'module/legacy';\n\n@include legacy.is(ie11) {\n  #{ns(consent-service)} {\n    &__collapse {\n      #{&}-btn {\n        text-decoration: underline;\n        @include icon-legacy(arrow-down-s-line, sm);\n\n        &[aria-expanded=\"true\"] {\n          @include icon-legacy(arrow-up-s-line, sm);\n        }\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Icon legacy\n/// @group core\n////\n\n@mixin icon-size-legacy($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    $size: icon-size($size);\n    @include size($size, $size);\n    @content;\n  }\n}\n\n@mixin icon-image-legacy($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n  @include _icon-pseudo($restrain) {\n    background-image: $url;\n  }\n}\n\n@mixin icon-style-legacy($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n    @content;\n  }\n}\n\n@mixin icon-legacy($icon: null, $size: md, $restrain: null, $styling: true) {\n  @if $styling {\n    @include icon-style-legacy($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image-legacy($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size-legacy($size, $restrain);\n  }\n\n  @include _icon-pseudo($restrain) {\n    @content;\n  }\n}\n\n@mixin generate-icons-legacy($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image-legacy($icon);\n    }\n  }\n}\n"]}
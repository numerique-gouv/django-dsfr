/*! DSFR v1.9.2 | SPDX-License-Identifier: MIT | License-Filename: LICENSE.md | restricted use (see terms and conditions) */
const e=window.dsfr,t={HEADER:e.internals.ns.selector("header"),TOOLS_LINKS:e.internals.ns.selector("header__tools-links"),MENU_LINKS:e.internals.ns.selector("header__menu-links"),BUTTONS:`${e.internals.ns.selector("header__tools-links")} ${e.internals.ns.selector("btns-group")}, ${e.internals.ns.selector("header__tools-links")} ${e.internals.ns.selector("links-group")}`,MODALS:`${e.internals.ns.selector("header__search")}${e.internals.ns.selector("modal")}, ${e.internals.ns.selector("header__menu")}${e.internals.ns.selector("modal")}`};class s extends e.core.Instance{static get instanceClassName(){return"HeaderLinks"}init(){const s=this.queryParentSelector(t.HEADER);this.toolsLinks=s.querySelector(t.TOOLS_LINKS),this.menuLinks=s.querySelector(t.MENU_LINKS);const n=this.toolsLinks.innerHTML.replace(/  +/g," "),r=this.menuLinks.innerHTML.replace(/  +/g," ");let a=n.replace(/(<nav[.\s\S]*-translate [.\s\S]*) id="(.*?)"([.\s\S]*<\/nav>)/gm,'$1 id="$2-mobile"$3');if(a=a.replace(/(<nav[.\s\S]*-translate [.\s\S]*) aria-controls="(.*?)"([.\s\S]*<\/nav>)/gm,'$1 aria-controls="$2-mobile"$3'),a!==r)switch(e.mode){case e.Modes.ANGULAR:case e.Modes.REACT:case e.Modes.VUE:e.inspector.warn(`header__tools-links content is different from header__menu-links content.\nAs you're using a dynamic framework, you should handle duplication of this content yourself, please refer to documentation:\n${e.header.doc}`);break;default:this.menuLinks.innerHTML=a}}}class n extends e.core.Instance{constructor(){super(),this._clickHandling=this.clickHandler.bind(this)}static get instanceClassName(){return"HeaderModal"}init(){this.isResizing=!0}resize(){this.isBreakpoint(e.core.Breakpoints.LG)?this.unqualify():this.qualify()}qualify(){this.setAttribute("role","dialog");const e=this.element.getInstance("Modal");if(!e)return;const t=e.buttons;let s="";for(const e of t)if(s=e.id||s,e.isPrimary&&s)break;this.setAttribute("aria-labelledby",s),this.listen("click",this._clickHandling,{capture:!0})}unqualify(){const e=this.element.getInstance("Modal");e&&e.conceal(),this.removeAttribute("role"),this.removeAttribute("aria-labelledby"),this.unlisten("click",this._clickHandling,{capture:!0})}clickHandler(t){if(t.target.matches("a, button")&&!t.target.matches("[aria-controls]")&&!t.target.matches(e.core.DisclosureSelector.PREVENT_CONCEAL)){this.element.getInstance("Modal").conceal()}}}e.header={HeaderLinks:s,HeaderModal:n,HeaderSelector:t,doc:"https://www.systeme-de-design.gouv.fr/elements-d-interface/composants/en-tete"},e.internals.register(e.header.HeaderSelector.TOOLS_LINKS,e.header.HeaderLinks),e.internals.register(e.header.HeaderSelector.MODALS,e.header.HeaderModal);

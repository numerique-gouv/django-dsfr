{"version":3,"sources":["<no source>","%3Cinput%20css%20FGnc1S%3E","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/input/style/_scheme.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/disabled/mixin/_selector.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/color/mixin/_element.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/media-query/mixin/_respond-from.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/shame/media-query/mixin/_order.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/legacy/mixin/_legacy.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/input/style/_legacy.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/input/style/_tool.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/selector/tool/_autofill.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/color/mixin/_data-uri-svg.scss"],"names":[],"mappings":"AAAA;;GAAA;ACAA,gBAAgB;;ACSd;EAKE;;GAAA;;EAOA;;GAAA;;EAKA;;GAAA;;EAOA;;GAAA;;EAOA;;;GAAA;ADLJ;;AEhBW;ECsBP,gCAAA;EAAA,wDAAA;AHkBJ;;AExCW;ECsBP,gCAAA;EAAA,wDAAA;AHgDJ;AI1EI;ECRI,cAAA;ALJR;AIYI;ECRI,cAAA;ALDR;AISI;ECRI,cAAA;ALER;AIMI;ECRI,cAAA;ALKR;AMHI;ECCE;IACE,cAAA;EPKN;;ECPA;IEgCE,cAAA;IAAA,sBAAA;IAAA,oCAAA;EHFF;;EQvBA;ILyBE,WAAA;EHaF;;ECzBE;IEYA,oCAAA;EHuBF;;EC5BE;IEKA,oCAAA;EH4BF;;ES/DA;;;;;;INmCE,gEAAA;IAAA,gCAAA;EHiCF;;ECzBE;ISpBE,oUAAA;EVuDJ;;EEjES;IQUL,oUAAA;EVgEJ;;ECjCI;IEnBF,oCAAA;EH0DF;AAlFF","file":"input.legacy.css","sourcesContent":[null,"@charset \"UTF-8\";\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input-wrap--addon .fr-btn {\n    flex-shrink: 0;\n  }\n}\n.fr-input {\n  /**\n  * Style du placeholder\n  */\n  /**\n  * Style pour l'état désactivé\n  */\n  /**\n  * Modificateur pour les champs validés\n  */\n  /**\n  * Modificateur pour les champs présentant des erreurs\n  */\n  /**\n  * On applique un style lorsque la valeur est automatiquement remplie par le navigateur\n  * sur les navigateurs webkit.\n  */\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input {\n    color: #161616;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input {\n    background-color: #eee;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input {\n    box-shadow: inset 0 -2px 0 0 #3a3a3a;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input::placeholder {\n    color: #666;\n  }\n}\n.fr-input:disabled {\n  color: var(--text-disabled-grey);\n  box-shadow: inset 0 -2px 0 0 var(--border-disabled-grey);\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input--valid {\n    box-shadow: inset 0 -2px 0 0 #18753c;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input--error {\n    box-shadow: inset 0 -2px 0 0 #ce0500;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input:autofill, .fr-input:autofill:hover, .fr-input:autofill:focus, .fr-input:-webkit-autofill, .fr-input:-webkit-autofill:hover, .fr-input:-webkit-autofill:focus {\n    box-shadow: inset 0 -2px 0 0 #3a3a3a, inset 0 0 0 1000px #e8edff;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input:autofill, .fr-input:autofill:hover, .fr-input:autofill:focus, .fr-input:-webkit-autofill, .fr-input:-webkit-autofill:hover, .fr-input:-webkit-autofill:focus {\n    -webkit-text-fill-color: #161616;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input[type=date] {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 24 24'%3E%3Cpath fill='%23161616' d='M17 3h4c.55 0 1 .45 1 1v16c0 .55-.45 1-1 1H3c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h4V1h2v2h6V1h2v2zm-2 2H9v2H7V5H4v4h16V5h-3v2h-2V5zm5 6H4v8h16v-8z'/%3E%3C/svg%3E\");\n  }\n}\n.fr-input[type=date]:disabled {\n  color: var(--text-disabled-grey);\n  box-shadow: inset 0 -2px 0 0 var(--border-disabled-grey);\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input[type=date]:disabled {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 24 24'%3E%3Cpath fill='%23929292' d='M17 3h4c.55 0 1 .45 1 1v16c0 .55-.45 1-1 1H3c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h4V1h2v2h6V1h2v2zm-2 2H9v2H7V5H4v4h16V5h-3v2h-2V5zm5 6H4v8h16v-8z'/%3E%3C/svg%3E\");\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-input-wrap > *:not(:last-child).fr-input:not(.fr-input--valid):not(.fr-input--error) {\n    box-shadow: inset 0 -2px 0 0 #000091;\n  }\n}","////\n/// Input Scheme\n/// @group input\n////\n\n@use 'module/color';\n@use 'module/disabled';\n\n@mixin _input-scheme($legacy: false) {\n  #{ns(input)} {\n    @include color.text(label grey, (legacy:$legacy));\n    @include color.background(contrast grey, (legacy:$legacy));\n    @include color.box-shadow(plain grey, (legacy:$legacy), bottom-2-in);\n\n    /**\n    * Style du placeholder\n    */\n    @include placeholder {\n      @include color.text(mention grey, (legacy:$legacy));\n    }\n\n    /**\n    * Style pour l'état désactivé\n    */\n    @include disabled.selector((legacy: $legacy), (text: true, box-shadow: bottom-2-in));\n\n    /**\n    * Modificateur pour les champs validés\n    */\n    &--valid {\n      @include color.box-shadow(plain success, (legacy:$legacy), bottom-2-in);\n    }\n\n    /**\n    * Modificateur pour les champs présentant des erreurs\n    */\n    &--error {\n      @include color.box-shadow(plain error, (legacy:$legacy), bottom-2-in);\n    }\n\n    /**\n    * On applique un style lorsque la valeur est automatiquement remplie par le navigateur\n    * sur les navigateurs webkit.\n    */\n    @include autofill {\n      @include color.box-shadow((plain grey) (background contrast info), (legacy:$legacy), bottom-2-in all-in);\n      @include color.text-fill(label grey, (legacy:$legacy));\n    }\n\n    &[type=date] {\n      @include color.data-uri-svg(text title grey, (legacy: $legacy), $input-calendar-line);\n\n      @include disabled.selector((legacy: $legacy), (text: true, box-shadow: bottom-2-in)) {\n        @include color.data-uri-svg(text disabled grey, (legacy: $legacy), $input-calendar-line);\n      }\n    }\n  }\n\n  #{ns(input-wrap)} {\n    > *:not(:last-child) {\n      &#{ns(input)}:not(#{ns(input--valid)}):not(#{ns(input--error)}) {\n        @include color.box-shadow(action-high blue-france, (legacy:$legacy), bottom-2-in);\n      }\n    }\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'colors';\n@use 'module/selector';\n\n/// Applique les couleurs disabled sur l'élément avec les sélecteurs appropriés\n/// @access public\n/// @param {map} map des options :\n///   - can-be-link {boolean}: ajoute le sélecteur de lien sans href.\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - background {boolean}: true, applique le token background disabled sur la couleur de fond\n///   - text {boolean}: true, applique le token text disabled sur la couleur de texte\n///   - box-shadow {}: si true, applique le token border disabled sur l'élément avec la box-shadow par défaut (encadré de 1 px). si une valeur de box-shadow est fournie, applique cette valeur (voir get-box-shadow)\n@mixin selector($options: (), $colors: null) {\n  $selectors: '&:disabled';\n  @if map.get($options, can-be-link) {\n    $selectors: list.append($selectors, selector.associate(&, 'a:not([href])'), comma);\n  }\n\n  @at-root #{$selectors} {\n    @if $colors != null {\n      @include colors.colors($colors);\n    }\n    @content;\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'module/legacy';\n@use 'module/media-query';\n@use 'module/spacing';\n@use 'module/specificity';\n@use 'module/string';\n@use 'module/utilities';\n@use '../variable/constant';\n@use '../function/box-shadow' as bs;\n@use '../function/colors';\n@use '../function/result';\n@use '../function/token';\n\n$COLOR: constant.$value;\n\n@mixin _element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $standalone: map.get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy {\n    $legacy-target: ie11;\n  }\n\n  $tokens: token.normalise($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: colors.from-list($tokens, $type, $options);\n  $result: result.get($colors, $value);\n  $result: specificity.important($result, $important);\n\n  @include legacy.is($legacy-target) {\n    #{$prop}: #{string.unstringify($result)};\n  }\n\n  @if ($hover == true or ($hover == inherit and $legacy == false)) and ($context == background and list.length($tokens) == 1) {\n\n    $token: nth($tokens, 1);\n    @if $legacy or $standalone {\n      @include _apply-pseudos($token, false, true, $legacy-target, $prop, $value, $important);\n    }\n    @else {\n      @if $prop == background-color {\n        --idle: transparent; // #{$result};\n        @include _apply-pseudos($token, true, false, null, $prop, $value, $important);\n      }\n      @else {\n        @include _apply-pseudos($token, true, true, null, $prop, $value, $important);\n      }\n    }\n  }\n}\n\n@mixin _apply-pseudos($token, $decision: true, $pseudo: false, $target: null, $prop: background-color, $value: constant.$value, $important: false) {\n  @include legacy.is($target) {\n    @include _apply-pseudo($token, hover, $decision, $pseudo, $prop, $value, $important);\n    @include _apply-pseudo($token, active, $decision, $pseudo, $prop, $value, $important);\n  }\n}\n\n@mixin _apply-pseudo($token, $type, $decision: true, $pseudo: false, $prop: background-color, $value: constant.$value, $important: false) {\n  $nest: null;\n  $p: --#{$type};\n  @if $pseudo {\n    $nest: '&:#{$type}';\n    $p: $prop;\n  }\n\n  $t: hex;\n  $options: (#{$type}: true);\n  @if $decision {\n    $t: decision;\n    $options: (var: true, #{$type}: true);\n  }\n\n  $color: colors.from($token, $t, $options);\n  $result: result.get($color, $value);\n  $result: specificity.important($result, $important);\n\n  @include utilities.nest($nest) {\n    #{$p}: #{string.unstringify($result)};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background($tokens, $options:()) {\n  @if not map.has-key($options, hover) {\n    $options: map.merge($options, (hover: inherit));\n  }\n  @include _element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin transparent-background($options) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $tokens: token.normalise(default grey, background);\n  $value: specificity.important(transparent, $important);\n\n  @if $legacy {\n    @include legacy.is(ie11) {\n      background-color: transparent;\n\n      @if $hover {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &:active {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n  }\n  @else {\n    background-color: #{$value};\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background-image($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: token.length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: string.unquote('$color##{$i}');\n      $transformed: list.append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include _element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text($tokens, $options) {\n  @include _element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text-fill($tokens, $options) {\n  @include _element(-webkit-text-fill-color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin fill($tokens, $options) {\n  @include _element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin border($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map.has-key($options, side) {\n    $prop:border-#{map.get($options, side)};\n  }\n  @include _element($prop, border, $tokens, $options, $value);\n}\n\n@mixin no-border($options: ()) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        border: 0;\n      }\n    }\n    @else {\n      border: 0;\n    }\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin outline($tokens, $options, $value:1px solid $COLOR) {\n  @include _element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin box-shadow($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: token.length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if bs.has($v) {\n      $transformed: append($transformed, bs.get($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include _element(box-shadow, border, $tokens, $options, spacing.space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin no-box-shadow($options) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        box-shadow: none;\n      }\n    }\n    @else {\n      box-shadow: none;\n    }\n  }\n}\n","@use '../variable/breakpoints';\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get(breakpoints.$values, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","@use 'module/media-query/variable/breakpoints';\n@use 'module/media-query';\n\n@mixin order () {\n  @each $bp, $limits in breakpoints.$values {\n    @if $bp != xs {\n      @include media-query.respond-from($bp) {\n        /*! media #{$bp} */\n      }\n    }\n  }\n}\n","/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is-not($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Input Legacy\n/// @group input\n////\n\n@use 'module/legacy';\n\n@include legacy.is(ie11) {\n  #{ns(input-wrap)} {\n    &--addon {\n      #{ns(btn)} {\n        flex-shrink: 0;\n      }\n    }\n  }\n}\n","////\n/// Input Tool\n/// @group input\n////\n\n/// Mixin pour ajouter les préfixes vendor du placeholder\n///\n/// @access public\n///\n/// @example scss\n///   .foo {\n///     @include placeholder {\n///       @content;\n///     }\n///   }\n@mixin placeholder {\n  &::placeholder {\n    @content;\n  }\n}\n","////\n/// Core Tool : Selector Autofill\n/// @group core\n////\n\n@mixin autofill () {\n  &:autofill,\n  &:autofill:hover,\n  &:autofill:focus,\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus {\n    @content;\n  }\n}\n","@use 'sass:map';\n@use 'module/specificity';\n@use 'module/legacy';\n@use 'module/selector/mixin/theme' as selector;\n@use 'module/utilities';\n@use 'module/string';\n@use '../function/token';\n@use '../function/colors';\n@use '../function/result';\n\n/// Combinaison de couleur appliquée à un svg intégré en data-uri\n/// @access public\n// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {Object} $value - le SVG en data-uri\n/// @param {String} $prop - propriété sur laquelle est assignée le svg\n/// @example @include scheme-element-data-uri-svg(text title grey, false, \"<svg><path fill='$COLOR'></path></svg>\"));\n@mixin data-uri-svg($tokens, $options: (), $value: \"<svg><path fill='$COLOR'></path></svg>\", $prop: background-image) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $tokens: token.normalise($tokens);\n  $light-colors: colors.from-list($tokens, hex, (theme: light));\n  $light: result.get($light-colors, $value);\n  $light: specificity.important($light, $important);\n\n  @if $legacy {\n    @include legacy.is(ie11) {\n      #{$prop}: #{url(utilities.data-uri(string.encode-svg($light, true), svg))};\n    }\n  }\n  @else {\n    --data-uri-svg: #{url(utilities.data-uri(string.encode-svg($light, false), svg))};\n\n    $dark-colors: colors.from-list($tokens, hex, (theme: dark));\n    $dark: result.get($dark-colors, $value);\n    $dark: specificity.important($dark, $important);\n\n    @include selector.theme(dark) {\n      --data-uri-svg: #{url(utilities.data-uri(string.encode-svg($dark, false), svg))};\n    }\n\n    #{$prop}: var(--data-uri-svg);\n  }\n}\n"]}
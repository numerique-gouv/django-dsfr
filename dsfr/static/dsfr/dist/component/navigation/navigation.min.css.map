{"version":3,"sources":["<no source>","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/navigation/style/module/_default.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/action/tool/_link.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/typography/tool/_list.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/typography/tool/_styles.scss","%3Cinput%20css%20se520M%3E","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/selector/tool/_block.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/display/tool/_display.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/spacing/tool/_space.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/spacing/tool/_position.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/selector/tool/_pseudo.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/color/mixin/_element.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/spacing/tool/_size.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/action/tool/_hover.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/icon/tool/_default.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/display/tool/_mask-image.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/navigation/style/module/_menu.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/navigation/style/module/_mega-menu.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/typography/tool/_font-weight.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/media-query/mixin/_respond-from.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/shame/media-query/mixin/_order.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/elevation/mixin/_shadow.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/elevation/mixin/_z-index.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/navigation/style/scheme/_default.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/navigation/style/scheme/_menu.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/navigation/style/scheme/_mega-menu.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/legacy/mixin/_legacy.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/icon/tool/_legacy.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/navigation/style/_legacy.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/module/utilities/mixin/_nest.scss"],"names":[],"mappings":"AAAA;;GAAA,ACOA,QCyBE,oBAAA,CCPA,cAAA,CACA,cAAA,CACA,YAAA,CACA,YAAA,CACA,YAAA,CACA,aAAA,CACA,iBAAA,CC0EE,gBAAA,CAAA,iBC9EJ,CCTE,cCPE,YAAA,CAIA,qBAAA,CCkBA,QAfE,CAeF,SHAJ,CJDM,kHAEE,eIYR,CCtBE,cCLE,mBAAA,CARA,YAAA,CNgDA,aAAA,CM5CA,qBAAA,CEPF,iBJgEF,CKxDE,qBDAE,QAAA,CEyBA,4FAAA,CDtBE,UT2Cc,CSvCd,aAAA,CEoCA,WAAA,CHxCF,MAAA,CR6CE,mBAAA,CQxDJ,iBAAA,CAKE,OAAA,CAHA,KAAA,CG8CE,UP4BN,CJjBI,6CW3BE,ePgDN,CJJE,2BY3BE,yBAAA,CAOA,2BAAA,CFvBA,kCAAA,CPfF,cAAA,CAGE,kBAAA,CIIA,gBAfE,CPuEF,eAAA,CWjCE,UP2DN,CJlBI,uDUxDA,oCAAA,CVyDE,iBI0BN,CK5GE,qECoCM,kBAAA,CAqCJ,kDAAA,CAAA,oDAAA,CAhDA,qDAAA,CDtBE,UTgFgB,CS5EhB,aAAA,CEoCA,aAAA,CHxCF,UAAA,CDUE,kBAXA,CCVJ,iBAAA,CAEE,OAAA,CG8CE,SP8EN,CJ5BE,cACE,aI8BJ,CJ5BI,wCAEE,cAAA,CADA,mBI+BN,CJ1BE,aMhGE,kBAAA,CARA,YAAA,CN0GA,kBAAA,CM9FA,6BF4HJ,CKnIE,mBI0BE,gBAAA,CAkBA,6BAAA,CJzCE,UIqD+B,CAdjC,oBAAA,CADA,aAAA,CFEE,uBAAA,CJ9BA,iBAXA,CAWA,cAXA,COZJ,gED0CM,CCzCN,wDDyCM,CCrCN,2BDmD2B,CClD3B,mBDkD2B,Cb6DvB,wBAAA,CahEF,kDAAA,CFHE,sBP0GN,CKlJE,uCToHM,yBImDR,CWlLA,SR4BI,iBAfE,CAeF,gBAfE,CIsCA,UPqIN,CWnLE,uBRmBI,YAXA,CAWA,aHoKN,CC/KE,eEeE,QAfE,CAeF,sBH2KJ,CW5KE,uBRXI,iBAHA,CAIA,kBHkMN,CKxME,8BMmBI,MXwLN,CYtNA,cT4BI,kBAfE,CAeF,cHuMJ,CYrNE,oBACE,YZsOJ,CY3NE,6BACE,YZoOJ,CY9NE,4BTjBI,iBAHA,CAIA,kBHuPN,CK7PE,mCO0BI,MZ2ON,CYvOE,sBfxBA,+DAAA,CEmFE,yBAAA,CAAA,0BAAA,CIpFE,iBAHA,CAIA,kBAJA,CAWA,gBHgQN,CYrOE,wBCrCA,ebwRF,CY/OE,oBT/BI,qBAXA,CCVJ,iBJuSF,CK/RE,2BDAE,QAAA,CEyBA,+CAAA,CDtBE,UO6Cc,CPzCd,aAAA,CEoCA,WAAA,CHxCF,MAAA,CQ+CE,mBAAA,CR1DJ,iBAAA,CAKE,OAAA,CAHA,KAAA,CG8CE,UPmQN,CK3SE,iCCyBE,sDNmTJ,CK5UE,gCCyBE,gDNsTJ,CchVI;ECRI,cAAA;EAAA,cAAA,CfDR,CcSI;ECRI,cAAA;EAAA,cAAA,CfER,CcMI;ECRI,cAAA,CdWN,cLCI,kBAAA,CACA,gBAAA,COaF,cHMF,CJhBI,6IOMA,mBHaJ,CJVI,kHASI,eAAA,CWkBJ,WAAA,CJ1BF,QAfE,CPsBI,iBAAA,COPN,YAfE,CIsCA,UPDJ,CKvCA,sMDAE,QAAA,CG2CE,UAAA,CHxCF,MAAA,CDUE,YAXA,CCVJ,iBAAA,CAEE,QAAA,CG8CE,UPQJ,CJGE,6CW3BE,ePqDJ,CCrEA,cLoDI,sBAAA,CAFA,eIyBJ,CKnFA,qBAGI,YLmFJ,CJxBI,2BACE,oBI0BN,CJrBA,2BG1DA,iBAAA,CAGE,kBC2FF,CJLA,aAYI,0BAAA,CO9FF,6BHsHF,CWlJF,SKAI,yCAAA,CLWA,mBAAA,CPRF,iBAAA,CAEE,QAAA,CaGE,iCAAA,CjB0LJ,CCrLA,eKkCM,kBAAA,CAqCJ,4CAAA,CAAA,8CAAA,CAhDA,+CAAA,CAAA,yDAAA,CHZE,kBAXA,CAeF,SAfE,CQQA,mBAAA,CJlBA,WP2MJ,CWnLA,uBLSE,iEAAA,CHRA,mBH8LF,CK/MA,8BMwBM,MX0LN,CY7NF,cN+CQ,kBAAA,CAqCJ,4CAAA,CAAA,8CAAA,CAhDA,+CAAA,CAAA,yDAAA,CUpCA,yCAAA,CZcA,MAAA,CDcA,QAfE,CAeF,SAfE,CCVJ,iBAAA,CAKE,OAAA,CAHA,QAAA,CaGE,iCAAA,CjBoOJ,CKjOA,oBAGI,UOLa,CPSb,aAAA,CFMA,sBHyNJ,CKtOA,mCAGI,UOMgB,CPFhB,aAAA,CFMA,gBHmOJ,CYjOA,6BAGI,YZsOJ,CYlOA,4BTLE,mBHgPF,CYnOA,sBTzBI,cAHA,CAIA,eAJA,CAWA,aHoQJ,CKjRA,2BAGI,YL4SJ,CkBzSI,iCZ8BE,kBAAA,CAqCJ,gDAAA,CAAA,kDAAA,CAhDA,mDAAA,CAAA,oCN4SF,CmBjUQ,8Lb+PJ,eN8FJ,CoB3VE,wBdmBA,gEN+VF;EejYM,cAAA,CfKR,CcGI;ECRI,cAAA;EAAA,cAAA,CfQR,CqBNI,2DxB2BF,eACE,oBGwXF,CFnVE,sBACE,oBEyVJ,CFtVE,sBKpDE,eARA,CAOA,YAPA,CAWA,cH8YJ,CK3ZA,mBiBME,4BAAA,CANA,8DAFI,CAUJ,2BAAA,CADA,oBAAA,CfoCE,WAAA,CAHA,SAAA,CPyYJ,CuBnaE,wBACE,QvB8aJ,CkBpcE,2BZgCA,aN2bF,CkBvdI,uDZ4BF,aNgcF,CKzdA,qECyBE,wBNqcF,CK9dA,qBCyBE,gDNodF,CK7eA,iCCyBE,gCNydF,CKlfA,gCCyBE,0BN8dF,CKvfA,2BCyBE,yBN6gBF,CAtIF,CqBvaI,uOEOA,2BjBwGE,4BN4TJ,CMzTM,uCACE,gCN2TR,CMxTM,yCACE,+BN0TR,CACF,CqBlbI,qGEgCA,cACE,evB2aJ,CuBxaM,wCACE,2BvB0aR,CuBjaI,wBpB1BA,kBHkcJ,CkBzcI,iCZmBF,wBAAA,CAAA,aN0cF,CmBzeA,SFDM,YjBogBN,CwB3gBE,elBuCA,qBAAA,CAAA,iCAAA,CNyeF,CmB9fQ,8Lb2PF,eN6QN,CmBjgBI,uBbcF,2CNwfF,CoBvhBA,cd+BE,qBAAA,CAAA,kCAAA,CWhCI,YjB8hBN,CoBjhBE,wBdmBA,0CNkhBF,CA3FF","file":"navigation.min.css","sourcesContent":[null,"////\n/// Navigation Module : default\n/// @group navigation\n////\n\n@use 'module/spacing';\n\n#{ns(nav)} {\n  @include disable-underline;\n  @include disable-list-style;\n  @include set-text-margin(0);\n  @include set-title-margin(0);\n\n  @include list {\n    @include display-flex(column);\n    @include margin(0);\n    @include padding(0);\n\n    @include respond-from(lg) {\n      flex-direction: row;\n      flex-wrap: nowrap;\n      @include margin(0 -4v);\n\n      & > *:first-child:nth-last-child(2) ~ *,\n      & > *:first-child:nth-last-child(3) ~ *,\n      & > *:first-child:nth-last-child(4) ~ * {\n        @include margin-left(5v);\n      }\n    }\n\n    &,\n    & > * {\n      & > #{ns(nav__link)},\n      & > #{ns(nav__btn)} {\n        font-weight: bold;\n\n        @include respond-from(lg) {\n          @include padding(4v);\n          @include margin(0);\n          @include size(auto, 100%);\n          min-height: spacing.space(14v);\n          font-weight: normal;\n\n          // @include z-index(auto);\n\n          &[aria-current] {\n            @include before {\n              @include absolute(auto, null, 0, 0, 100%, 2px);\n              @include margin-top(0);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @include list-item {\n    // TODO: supprimer la stylisation de la liste item, trouver une solution différente pour l'affichage du menu à droite et la barre d'espacement grise en mobile\n    @include display-flex(column, stretch);\n    flex: 0 1 auto;\n\n    @include relative;\n    @include before('', block) {\n      @include absolute(0, 0, 0 , 0, 100%, 100%);\n      pointer-events: none;\n    }\n\n    #{ns(btn)},\n    #{ns(link)} {\n      @include min-height(12v);\n      @include min-height(auto, lg);\n    }\n\n    @include respond-from(lg) {\n      position: initial;\n      @include before(none);\n      align-items: flex-start;\n\n      &--align-right {\n        align-items: flex-end;\n      }\n    }\n  }\n\n  &__link,\n  &__btn {\n    @include size(100%);\n    @include padding(3v 0);\n    @include text-style(md);\n    text-align: left;\n\n    @include respond-from(lg) {\n      @include text-style(sm);\n    }\n\n    @include enable-tint;\n\n    &[aria-current] {\n      position: relative;\n      @include before('', block) {\n        @include absolute(50%, null, null, -4v, 2px, 6v);\n        @include margin-top(-3v);\n      }\n    }\n  }\n\n  &__link {\n    display: block;\n\n    &[aria-current]:not([href]) {\n      pointer-events: none;\n      cursor: default;\n    }\n  }\n\n  &__btn {\n    @include display-flex(null, center, space-between);\n    flex-direction: row;\n    @include padding(4v 3v 4v 4v, lg);\n\n    @include icon(arrow-down-s-line, sm, after) {\n      @include margin-left(2v);\n      @include margin-right(0);\n      transition: transform 0.3s;\n    }\n\n    @include respond-from(lg) {\n      justify-content: flex-start;\n    }\n\n    &[aria-expanded=\"true\"] {\n      @include after {\n        transform: rotate(-180deg);\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Reset\n/// @group core\n////\n\n$underline-thickness: 0.0625em;\n\n@mixin a-reset ($minimal: false) {\n  text-decoration: none;\n  @if not $minimal {\n    color: inherit;\n  }\n}\n\n@mixin init-underline() {\n  --underline-max-width: 100%;\n  --underline-hover-width: 0;\n  --underline-idle-width: var(--underline-max-width);\n  --underline-x: calc(var(--underline-max-width) * 0);\n}\n\n@mixin enable-underline() {\n  --underline-img: linear-gradient(0deg, currentColor, currentColor);\n}\n\n@mixin enable-underline-legacy() {\n  [href] {\n    text-decoration: underline;\n  }\n}\n\n@mixin disable-underline() {\n  --underline-img: none;\n}\n\n@mixin disable-underline-legacy() {\n  [href] {\n    text-decoration: none;\n  }\n}\n\n@mixin link-underline() {\n  background-image: var(--underline-img), var(--underline-img);\n  background-position: var(--underline-x) 100%, var(--underline-x) calc(100% - #{$underline-thickness});\n  background-repeat: no-repeat, no-repeat;\n  transition: background-size 0s;\n  background-size: var(--underline-hover-width) #{$underline-thickness * 2 }, var(--underline-idle-width) #{$underline-thickness };\n}\n\n@mixin link-underline-hover-only() {\n  --underline-idle-width: 0;\n}\n\n@mixin hover-underline () {\n  &:hover,\n  &:active {\n    --underline-hover-width: var(--underline-max-width);\n  }\n}\n\n@mixin external-link() {\n  @include icon-style(after);\n  @include icon-size(sm, after);\n  @include icon-image(external-link-line, after);\n  @include after(var(--external-link-content)) {\n    @include margin-left(1v);\n  }\n}\n\n@mixin enable-external() {\n  --external-link-content: '';\n}\n\n@mixin disable-external() {\n  --external-link-content: none;\n}\n\n@mixin target-blank ($unify: false) {\n  @if $unify and & {\n    &[target=\"_blank\"] {\n      @content;\n    }\n  }\n  @else {\n    [target=\"_blank\"] {\n      @content;\n    }\n  }\n}\n","////\n/// Core Tool : Reset list\n/// @group core\n////\n\n@mixin enable-list-style() {\n  $selector: null;\n\n  @if & == null {\n    $selector: ':root';\n  }\n\n  @include nest($selector) {\n    --ul-type: disc;\n    --ol-type: decimal;\n    --ul-start: #{space(4v)};\n    --ol-start: #{space(6v)};\n    --xl-block: #{space(2v)};\n    --li-bottom: #{space(1v)};\n    --xl-base: 1em;\n    --ol-content: counters(li-counter, \".\") \".\\00a0\\00a0\";\n  }\n}\n\n@mixin disable-list-style() {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n\n@mixin enable-list-style-legacy($unify: false) {\n  $ul: ul;\n  $ol: ol;\n\n  @if $unify {\n    $ul: selector-associate('&', 'ul');\n    $ol: selector-associate('&', 'ol');\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: disc;\n    }\n\n    #{$ol} {\n      list-style-type: decimal;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(4v);\n      @include margin-y(2v);\n    }\n  }\n}\n\n@mixin disable-list-style-legacy($unify: false) {\n  $ul: '#{&} ul';\n  $ol: '#{&} ol';\n\n  @if $unify {\n    $ul: selector-associate('#{&}', 'ul');\n    $ol: selector-associate('#{&}', 'ol');\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: none;\n    }\n\n    #{$ol} {\n      list-style-type: none;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(0);\n      @include margin-y(0);\n    }\n  }\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@use 'module/spacing';\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} spacing.space($font-size) #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} spacing.space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","@charset \"UTF-8\";\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  NAVIGATION\n\\* ˍˍˍˍˍˍˍˍˍ */\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n.fr-nav {\n  --underline-img: none;\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n  --text-spacing: 0;\n  --title-spacing: 0;\n}\n.fr-nav__list {\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n}\n@media (min-width: 62em) {\n  .fr-nav__list {\n    flex-direction: row;\n    flex-wrap: nowrap;\n    margin: 0 -1rem;\n  }\n  .fr-nav__list > *:first-child:nth-last-child(2) ~ *, .fr-nav__list > *:first-child:nth-last-child(3) ~ *, .fr-nav__list > *:first-child:nth-last-child(4) ~ * {\n    margin-left: 1.25rem;\n  }\n}\n.fr-nav__list > .fr-nav__link, .fr-nav__list > .fr-nav__btn, .fr-nav__list > * > .fr-nav__link, .fr-nav__list > * > .fr-nav__btn {\n  font-weight: bold;\n}\n@media (min-width: 62em) {\n  .fr-nav__list > .fr-nav__link, .fr-nav__list > .fr-nav__btn, .fr-nav__list > * > .fr-nav__link, .fr-nav__list > * > .fr-nav__btn {\n    padding: 1rem;\n    margin: 0;\n    width: auto;\n    height: 100%;\n    min-height: 3.5rem;\n    font-weight: normal;\n  }\n  .fr-nav__list > .fr-nav__link[aria-current]::before, .fr-nav__list > .fr-nav__btn[aria-current]::before, .fr-nav__list > * > .fr-nav__link[aria-current]::before, .fr-nav__list > * > .fr-nav__btn[aria-current]::before {\n    position: absolute;\n    top: auto;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    margin-top: 0;\n  }\n}\n.fr-nav__item {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  flex: 0 1 auto;\n  position: relative;\n}\n.fr-nav__item::before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n.fr-nav__item .fr-btn,\n.fr-nav__item .fr-link {\n  min-height: 3rem;\n}\n@media (min-width: 62em) {\n  .fr-nav__item .fr-btn,\n.fr-nav__item .fr-link {\n    min-height: auto;\n  }\n}\n@media (min-width: 62em) {\n  .fr-nav__item {\n    position: initial;\n    align-items: flex-start;\n  }\n  .fr-nav__item::before {\n    content: none;\n  }\n  .fr-nav__item--align-right {\n    align-items: flex-end;\n  }\n}\n.fr-nav__link, .fr-nav__btn {\n  width: 100%;\n  padding: 0.75rem 0;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  text-align: left;\n  --hover-tint: var(--hover);\n  --active-tint: var(--active);\n}\n@media (min-width: 62em) {\n  .fr-nav__link, .fr-nav__btn {\n    font-size: 0.875rem;\n    line-height: 1.5rem;\n  }\n}\n.fr-nav__link[aria-current], .fr-nav__btn[aria-current] {\n  position: relative;\n}\n.fr-nav__link[aria-current]::before, .fr-nav__btn[aria-current]::before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: -1rem;\n  width: 2px;\n  height: 1.5rem;\n  margin-top: -0.75rem;\n}\n.fr-nav__link {\n  display: block;\n}\n.fr-nav__link[aria-current]:not([href]) {\n  pointer-events: none;\n  cursor: default;\n}\n.fr-nav__btn {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n}\n@media (min-width: 62em) {\n  .fr-nav__btn {\n    padding: 1rem 0.75rem 1rem 1rem;\n  }\n}\n.fr-nav__btn::after {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-nav__btn::after {\n  -webkit-mask-image: url(\"../../icons/system/arrow-down-s-line.svg\");\n  mask-image: url(\"../../icons/system/arrow-down-s-line.svg\");\n}\n.fr-nav__btn::after {\n  --icon-size: 1rem;\n}\n.fr-nav__btn::after {\n  content: \"\";\n  margin-left: 0.5rem;\n  margin-right: 0;\n  transition: transform 0.3s;\n}\n@media (min-width: 62em) {\n  .fr-nav__btn {\n    justify-content: flex-start;\n  }\n}\n.fr-nav__btn[aria-expanded=true]::after {\n  transform: rotate(-180deg);\n}\n\n.fr-menu {\n  margin: -4px -1rem;\n  padding: 4px 1rem;\n  width: auto;\n}\n.fr-menu.fr-collapsing {\n  margin-top: 0;\n  padding-top: 0;\n}\n@media (min-width: 62em) {\n  .fr-menu {\n    pointer-events: none;\n    position: absolute;\n    top: 100%;\n  }\n}\n.fr-menu__list {\n  margin: 0;\n  padding: 0.5rem 0 1.5rem;\n}\n@media (min-width: 62em) {\n  .fr-menu__list {\n    width: 20rem;\n    pointer-events: auto;\n    padding: 0;\n    margin-bottom: 2rem;\n  }\n}\n.fr-menu .fr-nav__link {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n.fr-menu .fr-nav__link::before {\n  left: 0;\n}\n@media (min-width: 62em) {\n  .fr-menu .fr-nav__link {\n    padding: 0.75rem 1rem;\n  }\n  .fr-menu .fr-nav__link::before {\n    left: 0;\n  }\n}\n\n.fr-mega-menu {\n  margin: 0 -1rem 1px;\n  padding: 0 1rem 0;\n}\n@media (min-width: 62em) {\n  .fr-mega-menu {\n    position: absolute;\n    top: 100%;\n    right: 0;\n    left: 0;\n    margin: 0;\n    padding: 0;\n  }\n  .fr-mega-menu::after {\n    content: \"\";\n    display: block;\n    padding-bottom: 2.25rem;\n  }\n}\n.fr-mega-menu:focus {\n  outline: none;\n}\n@media (min-width: 62em) {\n  .fr-mega-menu > .fr-container::before {\n    content: \"\";\n    display: block;\n    padding-top: 1rem;\n  }\n}\n.fr-mega-menu .fr-btn--close {\n  display: none;\n}\n@media (min-width: 62em) {\n  .fr-mega-menu .fr-btn--close {\n    display: flex;\n  }\n}\n.fr-mega-menu .fr-nav__link {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n@media (min-width: 62em) {\n  .fr-mega-menu .fr-nav__link {\n    padding: 0.75rem 1rem;\n  }\n}\n.fr-mega-menu .fr-nav__link::before {\n  left: 0;\n}\n.fr-mega-menu__leader {\n  --underline-img: linear-gradient(0deg, currentColor, currentColor);\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-top: 1rem;\n  --text-spacing: 0 0 0.5rem;\n  --title-spacing: 0 0 0.5rem;\n}\n@media (min-width: 62em) {\n  .fr-mega-menu__leader {\n    padding-top: 0;\n  }\n}\n@media (min-width: 62em) {\n  .fr-mega-menu__leader {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n.fr-mega-menu__category {\n  font-weight: 700;\n}\n.fr-mega-menu__list {\n  padding-bottom: 1.5rem;\n  position: relative;\n}\n.fr-mega-menu__list::before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n@media (min-width: 62em) {\n  .fr-mega-menu__list::before {\n    content: none;\n  }\n}\n\n.fr-nav__link, .fr-nav__btn {\n  color: var(--text-action-high-grey);\n}\n.fr-nav__link[aria-current], .fr-nav__btn[aria-current] {\n  color: var(--text-active-blue-france);\n}\n.fr-nav__link[aria-current]::before, .fr-nav__btn[aria-current]::before {\n  background-color: var(--background-active-blue-france);\n  --idle: transparent;\n  --hover: var(--background-active-blue-france-hover);\n  --active: var(--background-active-blue-france-active);\n}\n@media (min-width: 62em) {\n  .fr-nav__btn[aria-expanded=true] {\n    color: var(--text-active-blue-france);\n    background-color: var(--background-open-blue-france);\n    --idle: transparent;\n    --hover: var(--background-open-blue-france-hover);\n    --active: var(--background-open-blue-france-active);\n  }\n}\n.fr-nav__item::before {\n  box-shadow: 0 -1px 0 0 var(--border-default-grey), inset 0 -1px 0 0 var(--border-default-grey);\n}\n.fr-nav__item:first-child::before {\n  box-shadow: inset 0 -1px 0 0 var(--border-default-grey);\n}\n.fr-nav__item:last-child::before {\n  box-shadow: 0 -1px 0 0 var(--border-default-grey);\n}\n\n@media (min-width: 62em) {\n  .fr-menu {\n    z-index: calc(var(--ground) + 1000);\n    filter: drop-shadow(var(--overlap-shadow));\n  }\n  .fr-menu__list {\n    background-color: var(--background-overlap-grey);\n    --idle: transparent;\n    --hover: var(--background-overlap-grey-hover);\n    --active: var(--background-overlap-grey-active);\n  }\n  .fr-menu__list {\n    box-shadow: inset 0 1px 0 0 var(--border-open-blue-france);\n  }\n  .fr-menu__list > *:first-child, .fr-menu__list > *:first-child > .fr-nav__link, .fr-menu__list > *:hover, .fr-menu__list > *:hover > .fr-nav__link, .fr-menu__list > *:hover + *, .fr-menu__list > *:hover + * > .fr-nav__link {\n    box-shadow: none;\n  }\n  .fr-menu .fr-nav__link {\n    box-shadow: 0 calc(-1rem - 1px) 0 -1rem var(--border-default-grey);\n  }\n}\n\n@media (min-width: 62em) {\n  .fr-mega-menu {\n    z-index: calc(var(--ground) + 1000);\n    background-color: var(--background-overlap-grey);\n    --idle: transparent;\n    --hover: var(--background-overlap-grey-hover);\n    --active: var(--background-overlap-grey-active);\n    filter: drop-shadow(var(--overlap-shadow));\n    box-shadow: inset 0 1px 0 0 var(--border-open-blue-france);\n  }\n}\n.fr-mega-menu__list::before {\n  box-shadow: 0 1px 0 0 var(--border-default-grey);\n}\n@media (min-width: 62em) {\n  .fr-mega-menu__category {\n    box-shadow: 0 calc(1rem + 1px) 0 -1rem var(--border-default-grey);\n  }\n}\n\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /**\n  * reset liste à puce\n  */\n  .fr-nav [href] {\n    text-decoration: none;\n  }\n  .fr-nav ul {\n    list-style-type: none;\n  }\n\n  .fr-nav ol {\n    list-style-type: none;\n  }\n\n  .fr-nav ul,\n.fr-nav ol {\n    padding-left: 0;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  /**\n  * reset margin\n  */\n}\n@media all and (-ms-high-contrast: none) and (-ms-high-contrast: none), (-ms-high-contrast: none) and (-ms-high-contrast: active), (-ms-high-contrast: active) and (-ms-high-contrast: none), (-ms-high-contrast: active) and (-ms-high-contrast: active) {\n  .fr-nav__link, .fr-nav__btn {\n    background-color: transparent;\n  }\n  .fr-nav__link:hover, .fr-nav__btn:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-nav__link:active, .fr-nav__btn:active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-nav__btn::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-nav__btn::after {\n    background-image: url(\"../../icons/system/arrow-down-s-line.svg\");\n  }\n  .fr-nav__btn::after {\n    width: 1rem;\n    height: 1rem;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-mega-menu__category {\n    margin: 0;\n  }\n}\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  /**\n  * Correctif de l'alignement des menus sur la droite\n  */\n  .fr-nav__item {\n    position: static;\n  }\n  .fr-nav__item--align-right .fr-collapse {\n    transform: translateX(-100%);\n  }\n\n  /**\n  * Override du reset des marges des ul\n  **/\n  .fr-menu .fr-menu__list {\n    margin-bottom: 2rem;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-nav__link, .fr-nav__btn {\n    color: #161616;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-nav__link[aria-current], .fr-nav__btn[aria-current] {\n    color: #000091;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-nav__link[aria-current]::before, .fr-nav__btn[aria-current]::before {\n    background-color: #000091;\n  }\n}\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-nav__btn[aria-expanded=true] {\n    color: #000091;\n  }\n}\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-nav__btn[aria-expanded=true] {\n    background-color: #e3e3fd;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-nav__item::before {\n    box-shadow: 0 -1px 0 0 #ddd, inset 0 -1px 0 0 #ddd;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-nav__item:first-child::before {\n    box-shadow: inset 0 -1px 0 0 #ddd;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-nav__item:last-child::before {\n    box-shadow: 0 -1px 0 0 #ddd;\n  }\n}\n\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-menu {\n    z-index: 1000;\n  }\n}\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-menu__list {\n    background-color: #fff;\n  }\n}\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-menu__list {\n    box-shadow: inset 0 1px 0 0 #e3e3fd;\n  }\n}\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-menu__list > *:first-child, .fr-menu__list > *:first-child > .fr-nav__link, .fr-menu__list > *:hover, .fr-menu__list > *:hover > .fr-nav__link, .fr-menu__list > *:hover + *, .fr-menu__list > *:hover + * > .fr-nav__link {\n    box-shadow: none;\n  }\n}\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-menu .fr-nav__link {\n    box-shadow: 0 calc(-1rem - 1px) 0 -1rem #ddd;\n  }\n}\n\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-mega-menu {\n    z-index: 1000;\n  }\n}\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-mega-menu {\n    background-color: #fff;\n  }\n}\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-mega-menu {\n    box-shadow: inset 0 1px 0 0 #e3e3fd;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-mega-menu__list::before {\n    box-shadow: 0 1px 0 0 #ddd;\n  }\n}\n@media (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-mega-menu__category {\n    box-shadow: 0 calc(1rem + 1px) 0 -1rem #ddd;\n  }\n}","////\n/// Core Tool : Selector block\n/// @group core\n////\n\n@mixin title() {\n  &__title {\n    @content;\n  }\n}\n\n@mixin body() {\n  &__body {\n    @content;\n  }\n}\n\n@mixin list() {\n  &__list {\n    @content;\n  }\n}\n\n@mixin list-item() {\n  &__item {\n    @content;\n  }\n}\n","////\n/// Core Tool : Display display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n@use 'module/spacing';\n\n/// Set space property\n///\n/// @param {String} $property ['margin'] - propriété à appliquer à l'espacement `['margin', 'padding']`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `['x', 'y', 'top', 'right', 'bottom', 'left']`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing('margin', 6v, 'bottom');\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: spacing.space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Core Tool : Spacing position\n/// @group core\n////\n\n@use 'module/spacing';\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin top($top) {\n  top: spacing.space($top);\n}\n\n@mixin right($top) {\n  right: spacing.space($top);\n}\n\n@mixin bottom($top) {\n  bottom: spacing.space($top);\n}\n\n@mixin left($top) {\n  left: spacing.space($top);\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'module/legacy';\n@use 'module/media-query';\n@use 'module/spacing';\n@use 'module/specificity';\n@use 'module/string';\n@use 'module/utilities';\n@use '../variable/constant';\n@use '../function/box-shadow' as bs;\n@use '../function/colors';\n@use '../function/result';\n@use '../function/token';\n\n$COLOR: constant.$value;\n\n@mixin _element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $standalone: map.get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy {\n    $legacy-target: ie11;\n  }\n\n  $tokens: token.normalise($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: colors.from-list($tokens, $type, $options);\n  $result: result.get($colors, $value);\n  $result: specificity.important($result, $important);\n\n  @include legacy.is($legacy-target) {\n    #{$prop}: #{string.unstringify($result)};\n  }\n\n  @if ($hover == true or ($hover == inherit and $legacy == false)) and ($context == background and list.length($tokens) == 1) {\n\n    $token: nth($tokens, 1);\n    @if $legacy or $standalone {\n      @include _apply-pseudos($token, false, true, $legacy-target, $prop, $value, $important);\n    }\n    @else {\n      @if $prop == background-color {\n        --idle: transparent; // #{$result};\n        @include _apply-pseudos($token, true, false, null, $prop, $value, $important);\n      }\n      @else {\n        @include _apply-pseudos($token, true, true, null, $prop, $value, $important);\n      }\n    }\n  }\n}\n\n@mixin _apply-pseudos($token, $decision: true, $pseudo: false, $target: null, $prop: background-color, $value: constant.$value, $important: false) {\n  @include legacy.is($target) {\n    @include _apply-pseudo($token, hover, $decision, $pseudo, $prop, $value, $important);\n    @include _apply-pseudo($token, active, $decision, $pseudo, $prop, $value, $important);\n  }\n}\n\n@mixin _apply-pseudo($token, $type, $decision: true, $pseudo: false, $prop: background-color, $value: constant.$value, $important: false) {\n  $nest: null;\n  $p: --#{$type};\n  @if $pseudo {\n    $nest: '&:#{$type}';\n    $p: $prop;\n  }\n\n  $t: hex;\n  $options: (#{$type}: true);\n  @if $decision {\n    $t: decision;\n    $options: (var: true, #{$type}: true);\n  }\n\n  $color: colors.from($token, $t, $options);\n  $result: result.get($color, $value);\n  $result: specificity.important($result, $important);\n\n  @include utilities.nest($nest) {\n    #{$p}: #{string.unstringify($result)};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background($tokens, $options:()) {\n  @if not map.has-key($options, hover) {\n    $options: map.merge($options, (hover: inherit));\n  }\n  @include _element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin transparent-background($options) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $tokens: token.normalise(default grey, background);\n  $value: specificity.important(transparent, $important);\n\n  @if $legacy {\n    @include legacy.is(ie11) {\n      background-color: transparent;\n\n      @if $hover {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &:active {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n  }\n  @else {\n    background-color: #{$value};\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background-image($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: token.length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: string.unquote('$color##{$i}');\n      $transformed: list.append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include _element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text($tokens, $options) {\n  @include _element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text-fill($tokens, $options) {\n  @include _element(-webkit-text-fill-color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin fill($tokens, $options) {\n  @include _element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin border($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map.has-key($options, side) {\n    $prop:border-#{map.get($options, side)};\n  }\n  @include _element($prop, border, $tokens, $options, $value);\n}\n\n@mixin no-border($options: ()) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        border: 0;\n      }\n    }\n    @else {\n      border: 0;\n    }\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin outline($tokens, $options, $value:1px solid $COLOR) {\n  @include _element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin box-shadow($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: token.length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if bs.has($v) {\n      $transformed: append($transformed, bs.get($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include _element(box-shadow, border, $tokens, $options, spacing.space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin no-box-shadow($options) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        box-shadow: none;\n      }\n    }\n    @else {\n      box-shadow: none;\n    }\n  }\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{space($max-height)};\n    }\n  }\n}\n","////\n/// Core Tool : Action Hover\n/// @group core\n////\n\n@mixin hover-media-query () {\n  @media (hover: hover) and (pointer: fine) {\n    @content;\n  }\n}\n\n@mixin hover-type-selector($elements, $type: all, $check-disabled: false) {\n  $selectors: ();\n\n  @each $element, $setting in $elements {\n    $hover: map-get($setting, hover);\n    $selector: map-get($setting, selector);\n    @if $hover {\n      @if $type == map-get($hover, type) or $type == all {\n        $nested: $selector;\n        @if $check-disabled {\n          $nested: nest($selector, map-get($hover, selector));\n        }\n        $associated: $nested;\n        @if & != null and '#{&}' != ':root' {\n          $associated: selector-associate('#{&}', $nested);\n        }\n        $selectors: append($selectors, $associated, 'comma');\n      }\n    }\n  }\n\n  @at-root #{$selectors} {\n    @content;\n  }\n}\n\n@mixin hover-tint () {\n  &:hover {\n    background-color: var(--hover-tint);\n  }\n\n  &:active {\n    background-color: var(--active-tint);\n  }\n}\n\n@mixin enable-tint () {\n  @include tint-enabled(true, true);\n}\n\n@mixin disable-tint() {\n  @include tint-enabled(false, false);\n}\n\n@mixin tint-enabled ($hover: null, $active: null) {\n  @if $hover {\n    --hover-tint: var(--hover);\n  }\n  @else if $hover == false {\n    --hover-tint: var(--idle);\n  }\n\n  @if $active {\n    --active-tint: var(--active);\n  }\n  @else if $active == false {\n    --active-tint: var(--idle);\n  }\n}\n\n@mixin hover-brighten ($element, $img) {\n  @at-root #{$element} {\n    &:hover {\n      #{$img} {\n        --brightness: calc(100% + var(--brighten) * #{$hover-brighten});\n      }\n    }\n\n    &:active {\n      #{$img} {\n        --brightness: calc(100% + var(--brighten) * #{$hover-brighten * 2});\n      }\n    }\n  }\n}\n\n@mixin hover-brighten-filter () {\n  filter: brightness(var(--brightness));\n}\n","////\n/// Core Tool : Icon default\n/// @group core\n////\n\n@use 'module/path';\n@use 'module/spacing';\n@use 'module/specificity';\n\n/// Return icon size from map\n/// @param {String} $size ['md'] - Icon size from `$icon-size-map` (Default to 'md' = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return spacing.space(map-get($icon-size-map, $size));\n}\n\n@function get-icon-url($icon, $important: false) {\n  $config: map-get($icons-config, $icon);\n  $url: url('#{path.dist()}#{map-get($config, path)}');\n  @return specificity.important($url, $important);\n}\n\n@function get-icon-pseudo($restrain) {\n  @if $restrain == before or $restrain == after {\n    @return $restrain;\n  }\n  @return before after;\n}\n\n@mixin _icon-pseudo ($restrain: null) {\n  @include _pseudo(get-icon-pseudo($restrain)) {\n    @content;\n  }\n}\n\n@mixin icon-size ($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    --icon-size: #{icon-size($size)};\n    @content;\n  }\n}\n\n@mixin icon-image ($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n\n  @include _icon-pseudo($restrain) {\n    @include mask-image($url);\n  }\n}\n\n@mixin icon-style($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    flex: 0 0 auto;\n    display: inline-block;\n    vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n    background-color: currentColor;\n    @include size(var(--icon-size), var(--icon-size));\n    @include mask-image-size(100% 100%);\n    @content;\n  }\n}\n\n@mixin icon-content($is-before: true, $override: false) {\n  $pseudos: before after;\n  @if not $is-before {\n    $pseudos: after before;\n  }\n  @include _pseudo(nth($pseudos, 1), '') {\n    @content;\n  }\n  @if $override {\n    @include _pseudo(nth($pseudos, 2), none);\n  }\n}\n\n@mixin icon($icon: null, $size: md, $restrain: null, $styling: true, $is-before: $restrain != after, $override: false) {\n  @if $styling {\n    @include icon-style($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size($size, $restrain);\n  }\n\n  @if $is-before != null {\n    @include icon-content($is-before, $override) {\n      @content;\n    }\n  }\n}\n\n@function filter-icons($category, $config: $icons-config) {\n  $filtered: ();\n  @each $icon, $setting in $config {\n    @if map-get($setting, category) == $category {\n      $filtered: map-merge($filtered, (#{$icon}: $setting));\n    }\n  }\n  @return $filtered;\n}\n\n@mixin generate-icons($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image($icon);\n    }\n  }\n}\n","////\n/// Core Tool : mask-image\n/// @group core\n////\n\n@mixin mask-image($value) {\n  -webkit-mask-image: $value;\n  mask-image: $value;\n}\n\n@mixin mask-image-size($value) {\n  -webkit-mask-size: $value;\n  mask-size: $value;\n}\n\n@mixin mask-image-position($value) {\n  -webkit-mask-position: $value;\n  mask-position: $value;\n}\n","////\n/// Navigation Module : Menu\n/// @group navigation\n////\n\n#{ns(menu)} {\n  @include margin(-4px -4v);\n  @include padding(4px 4v);\n  @include size(auto);\n\n  &#{ns(collapsing)} {\n    @include margin-top(0);\n    @include padding-top(0);\n  }\n\n  @include respond-from(lg) {\n    pointer-events: none;\n    @include absolute(100%);\n  }\n\n  @include list {\n    @include margin(0);\n    @include padding(2v 0 6v);\n\n    @include respond-from(lg) {\n      @include width(80v);\n      pointer-events: auto;\n      @include padding(0);\n      @include margin-bottom(8v);\n    }\n  }\n\n  #{ns(nav__link)} {\n    @include padding-x(4v);\n    @include before {\n      left: 0;\n    }\n    @include respond-from(lg) {\n      @include padding(3v 4v);\n      @include before {\n        left: 0;\n      }\n    }\n  }\n}\n","////\n/// Navigation Module : Mega menu\n/// @group navigation\n////\n\n#{ns(mega-menu)} {\n  @include margin(0 -4v 1px);\n  @include padding(0 4v 0);\n\n  @include respond-from(lg) {\n    @include absolute(100%, 0, null, 0);\n    @include margin(0);\n    @include padding(0);\n\n    @include after('', block) {\n      @include padding-bottom(9v);\n    }\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  > #{ns(container)} {\n    @include respond-from(lg) {\n      @include before('', block) {\n        @include padding-top(4v);\n      }\n    }\n  }\n\n  #{ns(btn--close)} {\n    display: none;\n    @include respond-from(lg) {\n      display: flex;\n    }\n  }\n\n  #{ns(nav__link)} {\n    @include padding-x(4v);\n    @include padding(3v 4v, lg);\n    @include before {\n      left: 0;\n    }\n  }\n\n  &__leader {\n    @include enable-underline;\n    @include padding-x(4v);\n    @include padding-top(4v);\n    @include padding-top(0, lg);\n    @include padding-x(0, lg);\n    @include set-text-margin(0 0 2v);\n    @include set-title-margin(0 0 2v);\n  }\n\n  &__category {\n    @include font-weight(bold);\n  }\n\n  &__list {\n    @include padding-bottom(6v);\n\n    @include relative;\n    @include before('', block) {\n      @include absolute(0, 0, 0 , 0, 100%, 100%);\n      pointer-events: none;\n    }\n\n    @include respond-from(lg) {\n      @include before(none);\n    }\n  }\n}\n","////\n/// Core Tool : Typography font-weight\n/// @group core\n////\n\n/// Return font-weight value from font-weight map.\n///\n/// @param {String} $scale ['regular'] - Type scale value from `$weight-scale` (Default to 'regular' = 400)\n///\n/// @example scss - Set font-weight to bold (700)\n///   .foo {\n///     font-weight: font-weight('bold');\n///   }\n\n@function font-weight($scale: regular) {\n  @return map-get($font-weight-scale, $scale);\n}\n\n@mixin font-weight($scale) {\n  font-weight: font-weight($scale);\n}\n\n@mixin build-utillity-font-weight() {\n  $fontWeightValues: map-get($font-weight-vars, values);\n  @if $fontWeightValues == 'all' {\n    $fontWeightValues: map-keys($font-weight-names);\n  }\n  @each $weight in $fontWeightValues {\n    $name: map-get($font-weight-names, $weight);\n    #{ns('text--' + $name)} {\n      font-weight: #{$weight} !important;\n    }\n  }\n}\n","@use '../variable/breakpoints';\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get(breakpoints.$values, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","@use 'module/media-query/variable/breakpoints';\n@use 'module/media-query';\n\n@mixin order () {\n  @each $bp, $limits in breakpoints.$values {\n    @if $bp != xs {\n      @include media-query.respond-from($bp) {\n        /*! media #{$bp} */\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use 'module/elevation/variable/shadows';\n\n@mixin shadow($layer) {\n  @if map.has-key(shadows.$values, $layer) {\n    filter: drop-shadow(var(--#{$layer}-shadow));\n  }\n}\n","@use 'sass:map';\n@use 'module/elevation/variable/z-indexes';\n@use 'module/legacy';\n\n@mixin z-index($level, $legacy: false) {\n  @if map.has-key(z-indexes.$values, $level) {\n    $z-index: map.get(z-indexes.$values, $level);\n    @if $legacy {\n      @include legacy.is(ie11) {\n        z-index: #{$z-index};\n      }\n    }\n    @else {\n      z-index: calc(var(--ground) + #{$z-index});\n    }\n  }\n}\n","////\n/// Navigation Scheme : Nav\n/// @group navigation\n////\n\n@use 'module/color';\n\n@mixin _navigation-scheme-nav($legacy: false) {\n  #{ns(nav)} {\n    &__link,\n    &__btn {\n      @include color.text(action-high grey, (legacy: $legacy));\n\n      &[aria-current] {\n        @include color.text(active blue-france, (legacy: $legacy));\n        @include before {\n          @include color.background(active blue-france, (legacy: $legacy));\n        }\n      }\n    }\n\n    &__btn {\n      &[aria-expanded=\"true\"] {\n        @include respond-from(lg) {\n          @include color.text(active blue-france, (legacy: $legacy));\n          @include color.background(open blue-france, (legacy: $legacy));\n        }\n      }\n    }\n\n    @include list-item {\n      @include before {\n        @include color.box-shadow(default grey, (legacy:$legacy), top-1-out bottom-1-in);\n      }\n\n      &:first-child {\n        @include before {\n          @include color.box-shadow(default grey, (legacy:$legacy), bottom-1-in);\n        }\n      }\n\n      &:last-child {\n        @include before {\n          @include color.box-shadow(default grey, (legacy:$legacy), top-1-out);\n        }\n      }\n    }\n  }\n}\n","////\n/// Navigation Scheme : Menu\n/// @group navigation\n////\n\n@use 'sass:selector';\n@use 'module/color';\n@use 'module/elevation';\n\n@mixin _navigation-scheme-menu($legacy: false) {\n  #{ns(menu)} {\n    @include respond-from(lg) {\n      @include elevation.elevate(overlap, (background: #{'&__list'}, legacy: $legacy));\n\n      &__list {\n        @include color.box-shadow(open blue-france, (legacy:$legacy), top-1-in);\n\n        & > *:first-child,\n        & > *:hover,\n        & > *:hover + * {\n          &,\n          & > #{ns(nav__link)} {\n            @include color.no-box-shadow((legacy:$legacy));\n          }\n        }\n      }\n\n      #{ns(nav__link)} {\n        @include color.box-shadow(default grey, (legacy: $legacy), 0 calc(-4v - 1px) 0 -4v color.$constant);\n      }\n    }\n  }\n}\n","////\n/// Navigation Scheme : Mega menu\n/// @group navigation\n////\n\n@use 'module/color';\n@use 'module/elevation';\n@use 'module/media-query';\n\n@mixin _navigation-scheme-mega-menu($legacy: false) {\n  #{ns(mega-menu)} {\n    @include media-query.respond-from(lg) {\n      @include elevation.elevate(overlap, (legacy: $legacy));\n      @include color.box-shadow(open blue-france, (legacy:$legacy), top-1-in);\n    }\n\n    &__list {\n      @include before {\n        @include color.box-shadow(default grey, (legacy:$legacy), bottom-1-out);\n      }\n    }\n\n    &__category {\n      @include respond-from(lg) {\n        @include color.box-shadow(default grey, (legacy:$legacy), 0 calc(4v + 1px) 0 -4v color.$constant);\n      }\n    }\n  }\n}\n","/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is-not($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Core Tool : Icon legacy\n/// @group core\n////\n\n@mixin icon-size-legacy($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    $size: icon-size($size);\n    @include size($size, $size);\n    @content;\n  }\n}\n\n@mixin icon-image-legacy($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n  @include _icon-pseudo($restrain) {\n    background-image: $url;\n  }\n}\n\n@mixin icon-style-legacy($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n    @content;\n  }\n}\n\n@mixin icon-legacy($icon: null, $size: md, $restrain: null, $styling: true) {\n  @if $styling {\n    @include icon-style-legacy($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image-legacy($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size-legacy($size, $restrain);\n  }\n\n  @include _icon-pseudo($restrain) {\n    @content;\n  }\n}\n\n@mixin generate-icons-legacy($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image-legacy($icon);\n    }\n  }\n}\n","////\n/// Navigation Legacy\n/// @group navigation\n////\n\n@use 'module/color';\n@use 'module/legacy';\n\n@include legacy.is(ie11) {\n  /**\n  * reset liste à puce\n  */\n  #{ns(nav)} {\n    @include disable-underline-legacy;\n    @include disable-list-style-legacy;\n\n    &__link,\n    &__btn {\n      @include color.transparent-background((legacy: true, hover: true));\n    }\n\n    &__btn {\n      @include icon-legacy(arrow-down-s-line, sm, after);\n    }\n  }\n\n  /**\n  * reset margin\n  */\n  #{ns(mega-menu)} {\n    &__category {\n      margin: 0;\n    }\n  }\n}\n\n@include respond-from(lg) {\n  @include legacy.is(ie11) {\n    /**\n    * Correctif de l'alignement des menus sur la droite\n    */\n    #{ns(nav)}__item {\n      position: static;\n\n      &--align-right {\n        #{ns(collapse)} {\n          transform: translateX(-100%);\n        }\n      }\n    }\n\n    /**\n    * Override du reset des marges des ul\n    **/\n    #{ns(menu)} {\n      #{ns(menu__list)} {\n        @include margin-bottom(8v);\n      }\n    }\n  }\n}\n","@mixin nest($selector: null) {\n  @if $selector {\n    #{$selector} {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n"]}